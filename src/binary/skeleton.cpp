/*
 * (c)2017, Cris Luengo.
 * Based on original DIPlib code: (c)1995-2014, Delft University of Technology.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "diplib.h"
#include "diplib/binary.h"
#include "bucket.h"
#include "hilditch_condition_lut.h"

#if defined(__GNUG__)
// The conversion warnings are all for `a &= b`, where `a` and `b` are both uint8. The operation is performed in an int.
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif

namespace dip {

/* Description:
 *
 * EUSK2D:
 *
 *  Purpose:        calculate an accurate skeleton.
 *  Principle:      address pixels in order of increasing distance.
 *  Implementation: test Hilditch conditions to preserve topology.
 *                  store directional information to achieve speed.
 *
 *  Arguments:
 *  pimb1:          pointer to upper left corner of binary image (bit planes).
 *  mi:             input mask in first image.
 *  mo:             output mask in first image.
 *  mp:             temporary bit plane in first image.
 *  end:            end pixel condition (-1, 0, 1, 2 or 3).
 *                  -1:    loose ends are eaten away.
 *                   0:    "natural" end pixel condition of this algorithm.
 *                  1, 2, 3: extra end pixels are hold, number of neighbours.
 *  edge:           0 or 1.
 *  d4:             distance to 4-connected neighbours.
 *  d8:             distance to 8-connected neighbours.
 *  dk:             distance to neighbours reachable with a knight's move.
 *  distmax:        maximum distance to be treated, if 0 infinity is assumed.
 *  sizex:          size of image along x-axis.
 *  sizey:          size of image along y-axis.
 *  strideX:        pixel distance along x-axis.
 *  strideY:        pixel distance along y-axis.
 *
 *  Warning:
 *  Arguments are not checked, absolutely necessary are positive chunk- and
 *  queue sizes, non-overlapping bit planes masks and valid distance coefficients.
 *
 *
 * EUSK3D: Idem to 2D except:
 *  d1:             distance to 6-connected neighbours (1,0,0).
 *  d2:             distance to 18-connected neighbours (1,1,0).
 *  d3:             distance to 26-connected neighbours (1,1,1).
 *  d5:             distance to neighbours reachable with knight's move (2,1,0).
 *  d6:             distance to (2,1,1) neighbours.
 *  d9:             distance to (2,2,1) neighbours.
 *  sizez:          size of image along z-axis.
 *  strideZ:        pixel distance along y-axis.
 *
 *
 * History:
 *  Aug  7, 1987:   Ben Verwer - idea(after a week of trying with Robert Ellens)
 *  Aug  8, 1987:   Ben Verwer - created.
 *                  Sito Dekker - variable bucket structure.
 *                  Ben Verwer - implementation of buckets by means of macro's.
 *  Nov 29, 1987:   Ben Verwer - if a 4-c skeleton pixel generates a distance:
 *                  skeleton pixel!
 *  Dec 16, 1987:   Ben Verwer - added mp, shuffling of registers.
 *  Jan 13, 1988:   Ben Verwer - adapted for AIM.
 *  Jan 28, 1988:   Ben Verwer - distmax added, edge changed to 1 pixel thick,
 *  Feb  1, 1988:   Ben Verwer - endpixel condition -1 added.
 *  May 25, 1988:   Ben Verwer - changed order or neighbours for skeleton.
 *  Aug 4,  1988:   Ben Verwer - THREE DIMENSIONAL
 *                  (while at Philips Labs, Briarcliff Manor, USA).
 *                  using ideas of Lobregt, Verbeek, Vrooman, Toriwaki, Verwer.
 *  Aug 20, 1998:   Geert van Kempen - ported the code to DIPlib:
 *                   - added DIPlib wrapper (dip_EuclideanSkeleton()).
 *                   - removed optional distance output.
 *                   - made code re-entrant by removing static global bucket b.
 *                   - replaced malloc(), realloc(), free() with DIPlib's own
 *                     memory allocation & resource tracking functions.
 *                   - "dip_"ed the variables.
 *                   - made the code "stride-aware".
 *  Aug 03, 2017:   Cris Luengo - C++-ified a little bit, ported to DIPlib 3
 *                   - Bucket is now a class with a constructor and methods
 *                   - turned macros to deal with Bucket into methods
 *                   - replaced memory allocation with std::vector
 *                   - using std::unique_ptr for the one place where operator new
 *                     was needed
 *
 * Literature:
 *  "Improved metrics in image processing applied to the Hilditch skeleton"
 *  by B.J.H. Verwer, paper presented at 9th ICPR, Rome, November 14-17, 1988.
 */

namespace {

// How many nodes in each bucket in the queue?
constexpr dip::uint QUEUE_SIZE_2D = 65536;
constexpr dip::uint QUEUE_SIZE_3D = 1024;  // fewer nodes in each bucket (initially) because there's more buckets.

/*
 * structure node is used to store the wavefronts. pc points
 * to the place of the wavefront, dirc to the direction from
 * which the wavefront was generated. direction codes are:
 *
 *    13    15
 * 11 12 14  0  1
 *    10     2
 *  9  8  6  4  3
 *     7     5
 *
 * the edges are coded with the next four macros, used if erosion from
 * the edges is necessary.
 */

// Magic numbers (for 2D)
constexpr int EAST = 2;
constexpr int SOUTH = 6;
constexpr int WEST = 10;
constexpr int NORTH = 14;


//
// Common utility to 2D and 3D
//


// Copy bit planes
void EuskPlaneCopy(
      uint8* pimb,
      uint8 mi,
      uint8 mo,
      dip::sint sizex,
      dip::sint sizey,
      dip::sint sizez,
      dip::sint strideX,
      dip::sint strideY,
      dip::sint strideZ
) {
   for( dip::sint kk = 0; kk < sizez; ++kk ) {
      for( dip::sint jj = 0; jj < sizey; ++jj ) {
         uint8* pim = pimb + jj * strideY + kk * strideZ;
         for( dip::sint ii = 0; ii < sizex; ++ii ) {
            if( *pim & mi ) {
               *pim |= mo;
            } else {
               *pim &= ~mo;
            }
            pim += strideX;
         }
      }
   }
}

// Copy bit planes
void EuskSetFromPlane(
      uint8* pimb,
      uint8 mi,
      dip::sint sizex,
      dip::sint sizey,
      dip::sint sizez,
      dip::sint strideX,
      dip::sint strideY,
      dip::sint strideZ
) {
   for( dip::sint kk = 0; kk < sizez; ++kk ) {
      for( dip::sint jj = 0; jj < sizey; ++jj ) {
         uint8* pim = pimb + jj * strideY + kk * strideZ;
         for( dip::sint ii = 0; ii < sizex; ++ii ) {
            *pim = ( *pim & mi ) != 0;
            pim += strideX;
         }
      }
   }
}

// Put all background pixels 4-c to an object pixel in bucket 0
void EuskFillBucketZero(
      Bucket& b,
      uint8* pimb,
      uint8 mi,
      bool edge,
      dip::sint sizex,
      dip::sint sizey,
      dip::sint sizez,
      dip::sint strideX,
      dip::sint strideY,
      dip::sint strideZ
) {
   b.startwrite( 0 );
   // all background pixels 4-c to object in bucket 0
   if( strideZ != 0 ) {
      for( dip::sint kk = 2; kk < ( sizez - 2 ); ++kk ) {
         for( dip::sint jj = 2; jj < ( sizey - 2 ); ++jj ) {
            uint8* pim = pimb + 2 * strideX + jj * strideY + kk * strideZ;
            for( dip::sint ii = 2; ii < ( sizex - 2 ); ++ii ) {
               if(( *pim & mi ) == 0 ) {
                  if(( *( pim + strideX ) & mi ) || ( *( pim - strideX ) & mi ) ||
                     ( *( pim + strideY ) & mi ) || ( *( pim - strideY ) & mi ) ||
                     ( *( pim + strideZ ) & mi ) || ( *( pim - strideZ ) & mi )) {
                     b.STR( pim, 0 );
                  }
               }
               pim += strideX;
            }
         }
      }
   } else { // 2D
      for( dip::sint jj = 2; jj < ( sizey - 2 ); ++jj ) {
         uint8* pim = pimb + 2 * strideX + jj * strideY;
         for( dip::sint ii = 2; ii < ( sizex - 2 ); ++ii ) {
            if(( *pim & mi ) == 0 ) {
               if(( *( pim + strideX ) & mi ) || ( *( pim - strideX ) & mi ) ||
                  ( *( pim + strideY ) & mi ) || ( *( pim - strideY ) & mi )) {
                  b.STR( pim, 0 );
               }
            }
            pim += strideX;
         }
      }
      // if applicable, idem for edge pixels
      if( !edge ) {
         uint8* pim = pimb + 2 * strideY + 2 * strideX;
         for( dip::sint ii = sizex - 4; --ii >= 0; pim += strideX ) {
            if( *pim & mi ) { b.STR( pim - strideY, NORTH ); }
         }
         pim = pimb + ( sizey - 3 ) * strideY + 2 * strideX;
         for( dip::sint ii = sizex - 4; --ii >= 0; pim += strideX ) {
            if( *pim & mi ) { b.STR( pim + strideY, SOUTH ); }
         }
         for( dip::sint ii = 2; ii < sizey - 2; ++ii ) {
            pim = pimb + ii * strideY + 2 * strideX;
            if( *pim & mi ) {
               b.STR( pim - strideX, WEST );
            }
            pim += ( sizex - 5 ) * strideX;
            if( *pim & mi ) {
               b.STR( pim + strideX, EAST );
            }
         }
      }
   }
   b.closewrite();
}

// Give the outmost 2 pixels of the image value "edge" (0 or 1)
void EuskFixEdge(
      uint8* pimb,
      uint8 mi,
      bool edge,
      dip::sint sizeX,
      dip::sint sizeY,
      dip::sint sizeZ,
      dip::sint strideX,
      dip::sint strideY,
      dip::sint strideZ
) {
   dip::sint sizeX2 = sizeX - 2;
   dip::sint sizeY2 = sizeY - 2;
   dip::sint sizeZ2 = sizeZ - 2;
   if( sizeZ > 0 ) {
      for( dip::sint kk = 0; kk < sizeZ; ++kk ) {
         for( dip::sint jj = 0; jj < sizeY; ++jj ) {
            for( dip::sint ii = 0; ii < sizeX; ++ii ) {
               if(( ii < 2 ) || ( ii >= sizeX2 ) ||
                  ( jj < 2 ) || ( jj >= sizeY2 ) ||
                  ( kk < 2 ) || ( kk >= sizeZ2 )) {
                  uint8* pim = pimb + ii * strideX + jj * strideY + kk * strideZ;
                  if( edge == false ) {
                     *pim &= ~mi;
                  } else {
                     *pim |= mi;
                  }
               } else {
                  ii += ( sizeX - 5 ) > 0 ? ( sizeX - 5 ) : 0;
               }
            }
         }
      }
   } else {
      for( dip::sint jj = 0; jj < sizeY; ++jj ) {
         for( dip::sint ii = 0; ii < sizeX; ++ii ) {
            if(( ii < 2 ) || ( ii >= sizeX2 ) ||
               ( jj < 2 ) || ( jj >= sizeY2 )) {
               uint8* pim = pimb + ii * strideX + jj * strideY;
               if( !edge ) {
                  *pim &= ~mi;
               } else {
                  *pim |= mi;
               }
            } else {
               ii += ( sizeX - 5 ) > 0 ? ( sizeX - 5 ) : 0;
            }
         }
      }
   }
}


//
// EUSK 2D
//

// Remove the inner edge, preserve connectivity
void Eusk2DRemoveInnerEdge(
      uint8* pimb,
      uint8 mo,
      dip::sint sizex,
      dip::sint sizey,
      dip::sint strideX,
      dip::sint strideY
) {
   uint8* pim;
   dip::sint ii;

   for( pim = pimb + 3 * strideX + strideY, ii = sizex - 6; ii >= 0; --ii, pim += strideX ) {
      if( !( *( pim + strideY ) & mo )) { *pim &= ~mo; }
   }
   for( pim = pimb + 3 * strideX + ( sizey - 2 ) * strideY, ii = sizex - 6; ii >= 0; --ii, pim += strideX ) {
      if( !( *( pim - strideY ) & mo )) { *pim &= ~mo; }
   }
   for( ii = 3; ii < ( sizey - 3 ); ++ii ) {
      pim = pimb + ii * strideY + strideX;
      if( !( *( pim + strideX ) & mo )) { *pim &= ~mo; }
      pim += ( sizex - 3 ) * strideX;
      if( !( *( pim - strideX ) & mo )) { *pim &= ~mo; }
   }

   *( pimb + 2 * strideX + strideY )                             &= ~mo;
   *( pimb + ( sizex - 3 ) * strideX + strideY )                 &= ~mo;
   *( pimb + strideX + 2 * strideY )                             &= ~mo;
   *( pimb + ( sizex - 2 ) * strideX + 2 * strideY )             &= ~mo;
   *( pimb + strideX + ( sizey - 3 ) * strideY )                 &= ~mo;
   *( pimb + ( sizex - 2 ) * strideX + ( sizey - 3 ) * strideY ) &= ~mo;
   *( pimb + 2 * strideX + ( sizey - 2 ) * strideY )             &= ~mo;
   *( pimb + ( sizex - 3 ) * strideX + ( sizey - 2 ) * strideY ) &= ~mo;

   if( !( *( pimb + 2 * strideX + 2 * strideY ) & mo )) {
      *( pimb + strideX + strideY ) &= ~mo;
   }
   if( !( *( pimb + ( sizex - 3 ) * strideX + 2 * strideY ) & mo )) {
      *( pimb + ( sizex - 2 ) * strideX + strideY ) &= ~mo;
   }
   if( !( *( pimb + 2 * strideX + ( sizey - 3 ) * strideY ) & mo )) {
      *( pimb + strideX + ( sizey - 2 ) * strideY ) &= ~mo;
   }
   if( !( *( pimb + ( sizex - 3 ) * strideX + ( sizey - 3 ) * strideY ) & mo )) {
      *( pimb + ( sizex - 2 ) * strideX + ( sizey - 2 ) * strideY ) &= ~mo;
   }
}

// Remove loose ends
void Eusk2DRemoveEndPixels(
      uint8* pimb,
      uint8 mo,
      uint8 mp,
      dip::sint sizex,
      dip::sint sizey,
      dip::sint strideX,
      dip::sint strideY,
      uint8 const* lut,
      dip::uint queuesize
) {
   // allocate little queue to remove branches
   std::vector< uint8* > ppq;
   ppq.reserve( queuesize );
   // find all non-breaking pixels
   for( dip::sint y = 2; y < sizey - 2; ++y ) {
      uint8* pim = pimb + y * strideY + 2 * strideX;
      for( dip::sint x = sizex - 4; x >= 0; --x, pim += strideX ) {
         if( *pim & mo ) {
            uint8 entry = 0;
            if( *( pim + strideX           ) & mo ) { entry |= 1; }
            if( *( pim + strideX - strideY ) & mo ) { entry |= 2; }
            if( *( pim           - strideY ) & mo ) { entry |= 4; }
            if( *( pim - strideX - strideY ) & mo ) { entry |= 8; }
            if( *( pim - strideX           ) & mo ) { entry |= 16; }
            if( *( pim - strideX + strideY ) & mo ) { entry |= 32; }
            if( *( pim           + strideY ) & mo ) { entry |= 64; }
            if( *( pim + strideX + strideY ) & mo ) { entry |= 128; }
            if( !lut[ entry ] ) {
               ppq.push_back( pim );
            }
         }
      }
   }
   ppq.push_back( nullptr ); // we add another entry to the queue, where we can write in the code below.
   auto ppw = ppq.end() - 1;
   // eat off loose ends
   uint8 mop = mo | mp;
   auto ppr = ppq.begin();
   while( ppw != ppr ) {
      uint8* pim = *( ppr++ );
      if( ppr == ppq.end() ) {
         ppr = ppq.begin();
      }
      // test coordinates
      dip::sint x, y;
      if( strideY > strideX ) {
         x = ( pim - pimb ) % strideY;
         y = ( pim - pimb ) / strideY;
      } else {
         x = ( pim - pimb ) / strideX;
         y = ( pim - pimb ) % strideX;
      }
      if(( x > 1 ) && ( x < sizex - 2 ) && ( y > 1 ) && ( y < sizey - 2 )) {
         // test connectivity
         uint8 entry = 0;
         if( *( pim + strideX           ) & mo ) { entry |= 1; }
         if( *( pim + strideX - strideY ) & mo ) { entry |= 2; }
         if( *( pim           - strideY ) & mo ) { entry |= 4; }
         if( *( pim - strideX - strideY ) & mo ) { entry |= 8; }
         if( *( pim - strideX           ) & mo ) { entry |= 16; }
         if( *( pim - strideX + strideY ) & mo ) { entry |= 32; }
         if( *( pim           + strideY ) & mo ) { entry |= 64; }
         if( *( pim + strideX + strideY ) & mo ) { entry |= 128; }
         if( !lut[ entry ] ) {
            // remove pixel
            *pim &= ~mo;
            // next please
            if(     ( *( pim + strideX           ) & mop ) == mo ) { pim +=  strideX; }
            else if(( *( pim + strideX + strideY ) & mop ) == mo ) { pim +=  strideX+strideY; }
            else if(( *( pim + strideY           ) & mop ) == mo ) { pim +=  strideY; }
            else if(( *( pim - strideX + strideY ) & mop ) == mo ) { pim += -strideX+strideY; }
            else if(( *( pim - strideX           ) & mop ) == mo ) { pim += -strideX; }
            else if(( *( pim - strideX - strideY ) & mop ) == mo ) { pim += -strideX-strideY; }
            else if(( *( pim - strideY           ) & mop ) == mo ) { pim += -strideY; }
            else if(( *( pim + strideX - strideY ) & mop ) == mo ) { pim +=  strideX-strideY; }
            else { continue; }
            *( ppw++ ) = pim;
            if( ppw == ppq.end() ) {
               ppw = ppq.begin();
            }
         }
      }
   }
}

// Fill the tables for the neighbourhood
void Eusk2DNeighborhood(
      dip::sint strideX,
      dip::sint strideY,
      dip::sint* neig4,
      dip::sint* neig8,
      dip::sint neigk[ 16 ][ 2 ],
      dip::sint* neigb
) {
   /*  0 */      *neig4++ = 0;
   /*  1 */      *neig4++ = 0;
   /*  2 */      *neig4++ = -strideX;
   /*  3 */      *neig4++ = 0;
   /*  4 */      *neig4++ = 0;
   /*  5 */      *neig4++ = 0;
   /*  6 */      *neig4++ = -strideY;
   /*  7 */      *neig4++ = 0;
   /*  8 */      *neig4++ = 0;
   /*  9 */      *neig4++ = 0;
   /* 10 */      *neig4++ = strideX;
   /* 11 */      *neig4++ = 0;
   /* 12 */      *neig4++ = 0;
   /* 13 */      *neig4++ = 0;
   /* 14 */      *neig4++ = strideY;
   /* 15 */      *neig4   = 0;

   /*  0 */      *neig8++ = -strideX+strideY;
   /*  1 */      *neig8++ = 0;
   /*  2 */      *neig8++ = 0;
   /*  3 */      *neig8++ = 0;
   /*  4 */      *neig8++ = -strideX-strideY;
   /*  5 */      *neig8++ = 0;
   /*  6 */      *neig8++ = 0;
   /*  7 */      *neig8++ = 0;
   /*  8 */      *neig8++ = strideX-strideY;
   /*  9 */      *neig8++ = 0;
   /* 10 */      *neig8++ = 0;
   /* 11 */      *neig8++ = 0;
   /* 12 */      *neig8++ = strideX+strideY;
   /* 13 */      *neig8++ = 0;
   /* 14 */      *neig8++ = 0;
   /* 15 */      *neig8   = 0;

   /*  0 */      neigk[ 0 ][ 0 ]  = -strideX+2*strideY;
   /*  0 */      neigk[ 0 ][ 1 ]  = -2*strideX+strideY;
   /*  1 */      neigk[ 1 ][ 0 ]  = -2*strideX+strideY;
   /*  1 */      neigk[ 1 ][ 1 ]  = 0;
   /*  2 */      neigk[ 2 ][ 0 ]  = -2*strideX+strideY;
   /*  2 */      neigk[ 2 ][ 1 ]  = -2*strideX-strideY;
   /*  3 */      neigk[ 3 ][ 0 ]  = -2*strideX-strideY;
   /*  3 */      neigk[ 3 ][ 1 ]  = 0;
   /*  4 */      neigk[ 4 ][ 0 ]  = -2*strideX-strideY;
   /*  4 */      neigk[ 4 ][ 1 ]  = -strideX-2*strideY;
   /*  5 */      neigk[ 5 ][ 0 ]  = -strideX-2*strideY;
   /*  5 */      neigk[ 5 ][ 1 ]  = 0;
   /*  6 */      neigk[ 6 ][ 0 ]  = -strideX-2*strideY;
   /*  6 */      neigk[ 6 ][ 1 ]  = strideX-2*strideY;
   /*  7 */      neigk[ 7 ][ 0 ]  = strideX-2*strideY;
   /*  7 */      neigk[ 7 ][ 1 ]  = 0;
   /*  8 */      neigk[ 8 ][ 0 ]  = strideX-2*strideY;
   /*  8 */      neigk[ 8 ][ 1 ]  = 2*strideX-strideY;
   /*  9 */      neigk[ 9 ][ 0 ]  = 2*strideX-strideY;
   /*  9 */      neigk[ 9 ][ 1 ]  = 0;
   /* 10 */      neigk[ 10 ][ 0 ] = 2*strideX-strideY;
   /* 10 */      neigk[ 10 ][ 1 ] = 2*strideX+strideY;
   /* 11 */      neigk[ 11 ][ 0 ] = 2*strideX+strideY;
   /* 11 */      neigk[ 11 ][ 1 ] = 0;
   /* 12 */      neigk[ 12 ][ 0 ] = 2*strideX+strideY;
   /* 12 */      neigk[ 12 ][ 1 ] = strideX+2*strideY;
   /* 13 */      neigk[ 13 ][ 0 ] = strideX+2*strideY;
   /* 13 */      neigk[ 13 ][ 1 ] = 0;
   /* 14 */      neigk[ 14 ][ 0 ] = strideX+2*strideY;
   /* 14 */      neigk[ 14 ][ 1 ] = -strideX+2*strideY;
   /* 15 */      neigk[ 15 ][ 0 ] = -strideX+2*strideY;
   /* 15 */      neigk[ 15 ][ 1 ] = 0;

   /*  0 */      *neigb++ = strideX-strideY;
   /*  1 */      *neigb++ = 2*strideX-strideY;
   /*  2 */      *neigb++ = strideX;
   /*  3 */      *neigb++ = 2*strideX+strideY;
   /*  4 */      *neigb++ = strideX+strideY;
   /*  5 */      *neigb++ = strideX+2*strideY;
   /*  6 */      *neigb++ = strideY;
   /*  7 */      *neigb++ = -strideX+2*strideY;
   /*  8 */      *neigb++ = -strideX+strideY;
   /*  9 */      *neigb++ = -2*strideX+strideY;
   /* 10 */      *neigb++ = -strideX;
   /* 11 */      *neigb++ = -2*strideX-strideY;
   /* 12 */      *neigb++ = -strideX-strideY;
   /* 13 */      *neigb++ = -strideX-2*strideY;
   /* 14 */      *neigb++ = -strideY;
   /* 15 */      *neigb   = strideX-2*strideY;
}

void Eusk2D(
      uint8* pimb1,
      uint8 mi,
      uint8 mo,
      uint8 mp,
      int end, bool edge,
      dip::sint d4, dip::sint d8, dip::sint dk, dip::sint distmax,
      dip::sint sizex,
      dip::sint sizey,
      dip::sint strideX,
      dip::sint strideY
) {
   // initialize
   dip::sint strideX2 = strideX * 2;
   dip::sint strideY2 = strideY * 2;

   // endpixel condition
   uint8 const* luthile; // pointer to end pixel table
   switch( end ) {
      case 1:
         luthile = luthil[ 1 ];
         break;
      case 2:
         luthile = luthil[ 2 ];
         break;
      case 3:
         luthile = luthil[ 3 ];
         break;
      default: // 0, -1
         luthile = luthil[ 0 ];
   }

   // preliminaries: edge treatment and bitplane copies
   EuskFixEdge( pimb1, mi, edge, sizex, sizey, 0, strideX, strideY, 0 );
   EuskPlaneCopy( pimb1, mi, static_cast< uint8 >( mo | mp ), sizex, sizey, 1, strideX, strideY, 0 );
   EuskFixEdge( pimb1, mp, false, sizex, sizey, 0, strideX, strideY, 0 );

   // fill tables neig4[], neig8[], neigk[], neigb[]
   dip::sint neig4[ 16 ];      // successors 4-connected neighbours
   dip::sint neig8[ 16 ];      // successors 8-connected neighbours
   dip::sint neigk[ 16 ][ 2 ]; // successors knight's move neighbours
   dip::sint neigb[ 16 ];      // predecessors
   Eusk2DNeighborhood( strideX, strideY, neig4, neig8, neigk, neigb );

   // calculate required number of buckets
   dip::uint nbuckets;
   for( nbuckets = 2; nbuckets <= static_cast< dip::uint >( dk ); nbuckets *= 2 ) {}

   // create bucket structure buckets (-1 means not enough memory)
   Bucket b( nbuckets, QUEUE_SIZE_2D );

   // fill bucket 0
   EuskFillBucketZero( b, pimb1, mi, edge, sizex, sizey, 1, strideX, strideY, 0 );

   // generate distances
   for( dip::sint dist = d4; !b.Empty() && ( dist <= distmax || distmax == 0 ); ++dist ) {
      // Store pixels which are subject to removal this iteration in
      // bucket "dist". Remove mask mp immediately to prevent double storage.

      // register shuffle
      uint8 m2 = mp;

      b.startwrite( dist );
      b.startread( dist - d4 );
      uint8* pim;         // image pointer
      uint8 dirc;         // direction of central pixel
      if( dist == d4 ) {
         while( b.go ) {
            b.RCLP( pim );
            pim += strideX;
            if( *pim & m2 ) {
               *pim &= ~m2;
               b.STR( pim, 10 );
            }
            pim -= strideX2;
            if( *pim & m2 ) {
               *pim &= ~m2;
               b.STR( pim, 2 );
            }
            pim += strideX + strideY;
            if( *pim & m2 ) {
               *pim &= ~m2;
               b.STR( pim, 14 );
            }
            pim -= strideY2;
            if( *pim & m2 ) {
               *pim &= ~m2;
               b.STR( pim, 6 );
            }
         }
      } else if( dist > d4 ) {
         while( b.go ) {
            b.RCL( pim, dirc );
            if( neig4[ dirc ] ) {
               pim += neig4[ dirc ];
               if( *pim & m2 ) {
                  *pim &= ~m2;
                  b.STR( pim, dirc );
               }
            }
         }
      }

      b.startread( dist - d8 );
      if( dist == d8 ) {
         while( b.go ) {
            b.RCLP( pim );
            pim += strideX - strideY;
            if( *pim & m2 ) {
               *pim &= ~m2;
               b.STR( pim, 8 );
            }
            pim -= strideX2;
            if( *pim & m2 ) {
               *pim &= ~m2;
               b.STR( pim, 4 );
            }
            pim += strideY2;
            if( *pim & m2 ) {
               *pim &= ~m2;
               b.STR( pim, 0 );
            }
            pim += strideX2;
            if( *pim & m2 ) {
               *pim &= ~m2;
               b.STR( pim, 12 );
            }
         }
      } else if( dist > d8 ) {
         while( b.go ) {
            b.RCL( pim, dirc );
            if( neig8[ dirc ] ) {
               pim += neig8[ dirc ];
               if( *pim & m2 ) {
                  *pim &= ~m2;
                  b.STR( pim, dirc );
               }
            }
         }
      }

      b.startread( dist - dk );
      if( dist == dk ) {
         while( b.go ) {
            b.RCL( pim, dirc );
            pim -= strideX + strideY2;
            if( dirc != NORTH && *pim & m2 ) {
               *pim &= ~m2;
               b.STR( pim, 5 );
            }
            pim += strideX2;
            if( dirc != NORTH && *pim & m2 ) {
               *pim &= ~m2;
               b.STR( pim, 7 );
            }
            pim += strideX + strideY;
            if( dirc != EAST && *pim & m2 ) {
               *pim &= ~m2;
               b.STR( pim, 9 );
            }
            pim -= 2 * strideX2;
            if( dirc != WEST && *pim & m2 ) {
               *pim &= ~m2;
               b.STR( pim, 3 );
            }
            pim += strideY2;
            if( dirc != WEST && *pim & m2 ) {
               *pim &= ~m2;
               b.STR( pim, 1 );
            }
            pim += 2 * strideX2;
            if( dirc != EAST && *pim & m2 ) {
               *pim &= ~m2;
               b.STR( pim, 11 );
            }
            pim += strideY - strideX;
            if( dirc != SOUTH && *pim & m2 ) {
               *pim &= ~m2;
               b.STR( pim, 13 );
            }
            pim -= strideX2;
            if( dirc != SOUTH && *pim & m2 ) {
               *pim &= ~m2;
               b.STR( pim, 15 );
            }
         }
      } else if( dist > dk ) {
         while( b.go ) {
            b.RCL( pim, dirc );
            if( dirc & 1 ) {
               pim += neigk[ dirc ][ 0 ];
               if( *pim & m2 ) {
                  *pim &= ~m2;
                  b.STR( pim, dirc );
               }
            } else {
               uint8* ptemp = pim;
               pim += neigk[ dirc ][ 0 ];
               if( *pim & m2 ) {
                  *pim &= ~m2;
                  b.STR( pim, ( dirc - 1 ) & 15 );
               }
               pim = ptemp + neigk[ dirc ][ 1 ];
               if( *pim & m2 ) {
                  *pim &= ~m2;
                  b.STR( pim, dirc + 1 );
               }
            }
         }
      }

      // all pixels with distance 'dist' are now found
      b.closewrite();
      b.Free( dist - dk );

      // reshuffle register use
      uint8 m1 = mi | mo;
      m2 = mo;

      // topology testing: table lookup contains Hilditch conditions
      b.startread( dist );
      while( b.go ) {
         b.RCL( pim, dirc );

         // backtracking, see figure 6, paper
         if(( dirc == 2 || dirc == 6 || dirc == 10 || dirc == 14 ) &&
            ( *( pim + neigb[ dirc ] ) & m2 )) {
               continue;
         }

         // test neighbourhood in old image, use dirc to store table entry
         dirc = 0;
         pim += strideX;
         if( *pim & m2 ) { dirc |= 1; }
         pim -= strideX2;
         if( *pim & m2 ) { dirc |= 16; }
         pim -= strideY;
         if( *pim & m2 ) { dirc |= 8; }
         pim += strideX;
         if( *pim & m2 ) { dirc |= 4; }
         pim += strideX;
         if( *pim & m2 ) { dirc |= 2; }
         pim += strideY2;
         if( *pim & m2 ) { dirc |= 128; }
         pim -= strideX;
         if( *pim & m2 ) { dirc |= 64; }
         pim -= strideX;
         if( *pim & m2 ) { dirc |= 32; }
         if( luthile[ dirc ] ) { continue; }

         // totally recursive neighbourhood will be build in register byte
         uint8 breg = dirc;

         // test partially recursive neighbourhoods: changed pixels are distinguished by mo == 1
         // and mi == 0, a situation which does not occur normally
         pim += strideX;
         if(( *pim & m1 ) == m2 ) {
            if( luthil[ 0 ][ dirc & ~64 ] ) { continue; }
            breg &= ~64;
         }
         pim -= strideY - strideX;
         if(( *pim & m1 ) == m2 ) {
            if( luthil[ 0 ][ dirc & ~1 ] ) { continue; }
            breg &= ~1;
         }
         pim -= strideX2;
         if(( *pim & m1 ) == m2 ) {
            if( luthil[ 0 ][ dirc & ~16 ] ) { continue; }
            breg &= ~16;
         }
         pim -= strideY - strideX;
         if(( *pim & m1 ) == m2 ) {
            if( luthil[ 0 ][ dirc & ~4 ] ) { continue; }
            breg &= ~4;
         }

         // test totally recursive neighbourhood
         pim += strideX;
         if(( *pim & m1 ) == m2 ) { breg &= ~2; }
         pim -= strideX2;
         if(( *pim & m1 ) == m2 ) { breg &= ~8; }
         pim += strideY2;
         if(( *pim & m1 ) == m2 ) { breg &= ~32; }
         pim += strideX2;
         if(( *pim & m1 ) == m2 ) { breg &= ~128; }
         if( luthil[ 0 ][ breg ] ) { continue; }

         // change pixel, by temporarily removing input mask
         *( pim - strideY - strideX ) &= ~mi;
      }

      // update image, if pixel may be removed: remove mo, restore mi
      b.startread( dist );
      while( b.go ) {
         b.RCLP( pim );
         if( !( *pim & mi )) {
            *pim |= mi;
            *pim &= ~mo;
         }
      }

   } // end of dist loop

   // if applicable end pixel condition, remove branches
   if( end == -1 ) {
      Eusk2DRemoveEndPixels( pimb1, mo, mp, sizex, sizey, strideX, strideY, luthile, QUEUE_SIZE_2D );
   }

   // remove inner edge, preserve connectivity between outer edge and image
   Eusk2DRemoveInnerEdge( pimb1, mo, sizex, sizey, strideX, strideY );

   // Fix image
   EuskSetFromPlane( pimb1, mo, sizex, sizey, 1, strideX, strideY, 0 );
}


//
// EUSK 3D
//


constexpr int ENDPIXEL = 10000001;
constexpr int NOENDPIXEL = 10000002;
constexpr int NOENTRY = 10000003;

void PutInLocal(
      uint8 const* pim,
      dip::sint sX,
      dip::sint sY,
      dip::sint sZ,
      uint8 m2,
      uint8 m1,
      dip::sint oldlocal[ 27 ],
      dip::sint newlocal[ 27 ]
) {
   uint8 l;                  // value of neighbouring pixel
   dip::sint* loco = &oldlocal[ 0 ]; // old neighbourhood
   dip::sint* locn = &newlocal[ 0 ]; // new = recursive neighbourhood

   l = *( pim+sX+sY+sZ ); *loco++ = l & m2; *locn++ = (( l & m1 ) == m1 );
   l = *( pim+sX+sZ );    *loco++ = l & m2; *locn++ = (( l & m1 ) == m1 );
   l = *( pim+sX-sY+sZ ); *loco++ = l & m2; *locn++ = (( l & m1 ) == m1 );
   l = *( pim+sX+sY );    *loco++ = l & m2; *locn++ = (( l & m1 ) == m1 );
   l = *( pim+sX );       *loco++ = l & m2; *locn++ = (( l & m1 ) == m1 );
   l = *( pim+sX-sY );    *loco++ = l & m2; *locn++ = (( l & m1 ) == m1 );
   l = *( pim+sX+sY-sZ ); *loco++ = l & m2; *locn++ = (( l & m1 ) == m1 );
   l = *( pim+sX-sZ );    *loco++ = l & m2; *locn++ = (( l & m1 ) == m1 );
   l = *( pim+sX-sY-sZ ); *loco++ = l & m2; *locn++ = (( l & m1 ) == m1 );
   l = *( pim+sY+sZ );    *loco++ = l & m2; *locn++ = (( l & m1 ) == m1 );
   l = *( pim+sZ );       *loco++ = l & m2; *locn++ = (( l & m1 ) == m1 );
   l = *( pim-sY+sZ );    *loco++ = l & m2; *locn++ = (( l & m1 ) == m1 );
   l = *( pim+sY );       *loco++ = l & m2; *locn++ = (( l & m1 ) == m1 );
   l = *( pim );          *loco++ = l & m2; *locn++ = (( l & m1 ) == m1 );
   l = *( pim-sY );       *loco++ = l & m2; *locn++ = (( l & m1 ) == m1 );
   l = *( pim+sY-sZ );    *loco++ = l & m2; *locn++ = (( l & m1 ) == m1 );
   l = *( pim-sZ );       *loco++ = l & m2; *locn++ = (( l & m1 ) == m1 );
   l = *( pim-sY-sZ );    *loco++ = l & m2; *locn++ = (( l & m1 ) == m1 );
   l = *( pim-sX+sY+sZ ); *loco++ = l & m2; *locn++ = (( l & m1 ) == m1 );
   l = *( pim-sX+sZ );    *loco++ = l & m2; *locn++ = (( l & m1 ) == m1 );
   l = *( pim-sX-sY+sZ ); *loco++ = l & m2; *locn++ = (( l & m1 ) == m1 );
   l = *( pim-sX+sY );    *loco++ = l & m2; *locn++ = (( l & m1 ) == m1 );
   l = *( pim-sX );       *loco++ = l & m2; *locn++ = (( l & m1 ) == m1 );
   l = *( pim-sX-sY );    *loco++ = l & m2; *locn++ = (( l & m1 ) == m1 );
   l = *( pim-sX+sY-sZ ); *loco++ = l & m2; *locn++ = (( l & m1 ) == m1 );
   l = *( pim-sX-sZ );    *loco++ = l & m2; *locn++ = (( l & m1 ) == m1 );
   l = *( pim-sX-sY-sZ ); *loco++ = l & m2; *locn++ = (( l & m1 ) == m1 );
}

// FILL THE TABLES, Ben Verwer March 1985 and August 1988
void Eusk3DFillTables(
      dip::sint sX, // strides
      dip::sint sY,
      dip::sint sZ,
      dip::sint bvcontour[ 3 ][ 3 ],
      dip::sint endpix[ 64 ][ 4 ],
      dip::sint a1[ 98 ][ 2 ],
      dip::sint a2[ 98 ][ 2 ],
      dip::sint a3[ 98 ][ 2 ],
      dip::sint a5[ 98 ][ 2 ],
      dip::sint a6[ 98 ][ 2 ],
      dip::sint a9[ 98 ][ 2 ],
      dip::uint8 n1[ 98 ][ 2 ],
      dip::uint8 n2[ 98 ][ 2 ],
      dip::uint8 n3[ 98 ][ 2 ],
      dip::uint8 n5[ 98 ][ 2 ],
      dip::uint8 n6[ 98 ][ 2 ],
      dip::uint8 n9[ 98 ][ 2 ]
) {
   dip::sint* e = &endpix[ 0 ][ 0 ];
   dip::sint* a;
   dip::uint8* n;

   // DIST1 = 1000
   a = &a1[ 0 ][ 0 ];
   n = &n1[ 0 ][ 0 ];

   /*  0  2  2  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /*  1  2  2 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /*  2  2  1  2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /*  3  2  1  1 */   *a++ = -sX; *n++ = 28; *a++ = 0; *n++ = 99;
   /*  4  2  1  0 */   *a++ = -sX; *n++ = 28; *a++ = 0; *n++ = 99;
   /*  5  2  1 -1 */   *a++ = -sX; *n++ = 28; *a++ = 0; *n++ = 99;
   /*  6  2  1 -2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /*  7  2  0  1 */   *a++ = -sX; *n++ = 28; *a++ = 0; *n++ = 99;
   /*  8  2  0 -1 */   *a++ = -sX; *n++ = 28; *a++ = 0; *n++ = 99;
   /*  9  2 -1  2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 10  2 -1  1 */   *a++ = -sX; *n++ = 28; *a++ = 0; *n++ = 99;
   /* 11  2 -1  0 */   *a++ = -sX; *n++ = 28; *a++ = 0; *n++ = 99;
   /* 12  2 -1 -1 */   *a++ = -sX; *n++ = 28; *a++ = 0; *n++ = 99;
   /* 13  2 -1 -2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 14  2 -2  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 15  2 -2 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 16  1  2  2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 17  1  2  1 */   *a++ = -sY; *n++ = 45; *a++ = 0; *n++ = 99;
   /* 18  1  2  0 */   *a++ = -sY; *n++ = 45; *a++ = 0; *n++ = 99;
   /* 19  1  2 -1 */   *a++ = -sY; *n++ = 45; *a++ = 0; *n++ = 99;
   /* 20  1  2 -2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 21  1  1  2 */   *a++ = -sZ; *n++ = 48; *a++ = 0; *n++ = 99;
   /* 22  1  1  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 23  1  1  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 24  1  1 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 25  1  1 -2 */   *a++ = sZ; *n++ = 49; *a++ = 0; *n++ = 99;
   /* 26  1  0  2 */   *a++ = -sZ; *n++ = 48; *a++ = 0; *n++ = 99;
   /* 27  1  0  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 28  1  0  0 */   *a++ = -sX; *n++ = 28; *a++ = 0; *n++ = 99;
   /* 29  1  0 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 30  1  0 -2 */   *a++ = sZ; *n++ = 49; *a++ = 0; *n++ = 99;
   /* 31  1 -1  2 */   *a++ = -sZ; *n++ = 48; *a++ = 0; *n++ = 99;
   /* 32  1 -1  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 33  1 -1  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 34  1 -1 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 35  1 -1 -2 */   *a++ = sZ; *n++ = 49; *a++ = 0; *n++ = 99;
   /* 36  1 -2  2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 37  1 -2  1 */   *a++ = sY; *n++ = 52; *a++ = 0; *n++ = 99;
   /* 38  1 -2  0 */   *a++ = sY; *n++ = 52; *a++ = 0; *n++ = 99;
   /* 39  1 -2 -1 */   *a++ = sY; *n++ = 52; *a++ = 0; *n++ = 99;
   /* 40  1 -2 -2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 41  0  2  1 */   *a++ = -sY; *n++ = 45; *a++ = 0; *n++ = 99;
   /* 42  0  2 -1 */   *a++ = -sY; *n++ = 45; *a++ = 0; *n++ = 99;
   /* 43  0  1  2 */   *a++ = -sZ; *n++ = 48; *a++ = 0; *n++ = 99;
   /* 44  0  1  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 45  0  1  0 */   *a++ = -sY; *n++ = 45; *a++ = 0; *n++ = 99;
   /* 46  0  1 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 47  0  1 -2 */   *a++ = sZ; *n++ = 49; *a++ = 0; *n++ = 99;
   /* 48  0  0  1 */   *a++ = -sZ; *n++ = 48; *a++ = 0; *n++ = 99;
   /* 49  0  0 -1 */   *a++ = sZ; *n++ = 49; *a++ = 0; *n++ = 99;
   /* 50  0 -1  2 */   *a++ = -sZ; *n++ = 48; *a++ = 0; *n++ = 99;
   /* 51  0 -1  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 52  0 -1  0 */   *a++ = sY; *n++ = 52; *a++ = 0; *n++ = 99;
   /* 53  0 -1 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 54  0 -1 -2 */   *a++ = sZ; *n++ = 49; *a++ = 0; *n++ = 99;
   /* 55  0 -2  1 */   *a++ = sY; *n++ = 52; *a++ = 0; *n++ = 99;
   /* 56  0 -2 -1 */   *a++ = sY; *n++ = 52; *a++ = 0; *n++ = 99;
   /* 57  1  2  2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 58  1  2  1 */   *a++ = -sY; *n++ = 45; *a++ = 0; *n++ = 99;
   /* 59  1  2  0 */   *a++ = -sY; *n++ = 45; *a++ = 0; *n++ = 99;
   /* 60  1  2 -1 */   *a++ = -sY; *n++ = 45; *a++ = 0; *n++ = 99;
   /* 61  1  2 -2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 62  1  1  2 */   *a++ = -sZ; *n++ = 48; *a++ = 0; *n++ = 99;
   /* 63  1  1  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 64  1  1  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 65  1  1 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 66  1  1 -2 */   *a++ = sZ; *n++ = 49; *a++ = 0; *n++ = 99;
   /* 67  1  0  2 */   *a++ = -sZ; *n++ = 48; *a++ = 0; *n++ = 99;
   /* 68  1  0  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 69  1  0  0 */   *a++ = sX; *n++ = 69; *a++ = 0; *n++ = 99;
   /* 70  1  0 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 71  1  0 -2 */   *a++ = sZ; *n++ = 49; *a++ = 0; *n++ = 99;
   /* 72  1 -1  2 */   *a++ = -sZ; *n++ = 48; *a++ = 0; *n++ = 99;
   /* 73  1 -1  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 74  1 -1  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 75  1 -1 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 76  1 -1 -2 */   *a++ = sZ; *n++ = 49; *a++ = 0; *n++ = 99;
   /* 77  1 -2  2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 78  1 -2  1 */   *a++ = sY; *n++ = 52; *a++ = 0; *n++ = 99;
   /* 79  1 -2  0 */   *a++ = sY; *n++ = 52; *a++ = 0; *n++ = 99;
   /* 80  1 -2 -1 */   *a++ = sY; *n++ = 52; *a++ = 0; *n++ = 99;
   /* 81  1 -2 -2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 82  2  2  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 83  2  2 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 84  2  1  2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 85  2  1  1 */   *a++ = sX; *n++ = 69; *a++ = 0; *n++ = 99;
   /* 86  2  1  0 */   *a++ = sX; *n++ = 69; *a++ = 0; *n++ = 99;
   /* 87  2  1 -1 */   *a++ = sX; *n++ = 69; *a++ = 0; *n++ = 99;
   /* 88  2  1 -2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 89  2  0  1 */   *a++ = sX; *n++ = 69; *a++ = 0; *n++ = 99;
   /* 90  2  0 -1 */   *a++ = sX; *n++ = 69; *a++ = 0; *n++ = 99;
   /* 91  2 -1  2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 92  2 -1  1 */   *a++ = sX; *n++ = 69; *a++ = 0; *n++ = 99;
   /* 93  2 -1  0 */   *a++ = sX; *n++ = 69; *a++ = 0; *n++ = 99;
   /* 94  2 -1 -1 */   *a++ = sX; *n++ = 69; *a++ = 0; *n++ = 99;
   /* 95  2 -1 -2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 96  2 -2  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 97  2 -2 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;

   // DIST2 = 1414
   a = &a2[ 0 ][ 0 ];
   n = &n2[ 0 ][ 0 ];

   /*  0  2  2  1 */   *a++ = -sX-sY; *n++ = 23; *a++ = 0; *n++ = 99;
   /*  1  2  2 -1 */   *a++ = -sX-sY; *n++ = 23; *a++ = 0; *n++ = 99;
   /*  2  2  1  2 */   *a++ = -sX-sZ; *n++ = 27; *a++ = 0; *n++ = 99;
   /*  3  2  1  1 */   *a++ = -sX-sZ; *n++ = 27; *a++ = -sX-sY; *n++ = 23;
   /*  4  2  1  0 */   *a++ = -sX-sY; *n++ = 23; *a++ = 0; *n++ = 99;
   /*  5  2  1 -1 */   *a++ = -sX+sZ; *n++ = 29; *a++ = -sX-sY; *n++ = 23;
   /*  6  2  1 -2 */   *a++ = -sX+sZ; *n++ = 29; *a++ = 0; *n++ = 99;
   /*  7  2  0  1 */   *a++ = -sX-sZ; *n++ = 27; *a++ = 0; *n++ = 99;
   /*  8  2  0 -1 */   *a++ = -sX+sZ; *n++ = 29; *a++ = 0; *n++ = 99;
   /*  9  2 -1  2 */   *a++ = -sX-sZ; *n++ = 27; *a++ = 0; *n++ = 99;
   /* 10  2 -1  1 */   *a++ = -sX+sY; *n++ = 33; *a++ = -sX-sZ; *n++ = 27;
   /* 11  2 -1  0 */   *a++ = -sX+sY; *n++ = 33; *a++ = 0; *n++ = 99;
   /* 12  2 -1 -1 */   *a++ = -sX+sY; *n++ = 33; *a++ = -sX+sZ; *n++ = 29;
   /* 13  2 -1 -2 */   *a++ = -sX+sZ; *n++ = 29; *a++ = 0; *n++ = 99;
   /* 14  2 -2  1 */   *a++ = -sX+sY; *n++ = 33; *a++ = 0; *n++ = 99;
   /* 15  2 -2 -1 */   *a++ = -sX+sY; *n++ = 33; *a++ = 0; *n++ = 99;
   /* 16  1  2  2 */   *a++ = -sY-sZ; *n++ = 44; *a++ = 0; *n++ = 99;
   /* 17  1  2  1 */   *a++ = -sY-sZ; *n++ = 44; *a++ = -sX-sY; *n++ = 23;
   /* 18  1  2  0 */   *a++ = -sX-sY; *n++ = 23; *a++ = 0; *n++ = 99;
   /* 19  1  2 -1 */   *a++ = -sY+sZ; *n++ = 46; *a++ = -sX-sY; *n++ = 23;
   /* 20  1  2 -2 */   *a++ = -sY+sZ; *n++ = 46; *a++ = 0; *n++ = 99;
   /* 21  1  1  2 */   *a++ = -sY-sZ; *n++ = 44; *a++ = -sX-sZ; *n++ = 27;
   /* 22  1  1  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 23  1  1  0 */   *a++ = -sX-sY; *n++ = 23; *a++ = 0; *n++ = 99;
   /* 24  1  1 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 25  1  1 -2 */   *a++ = -sY+sZ; *n++ = 46; *a++ = -sX+sZ; *n++ = 29;
   /* 26  1  0  2 */   *a++ = -sX-sZ; *n++ = 27; *a++ = 0; *n++ = 99;
   /* 27  1  0  1 */   *a++ = -sX-sZ; *n++ = 27; *a++ = 0; *n++ = 99;
   /* 28  1  0  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 29  1  0 -1 */   *a++ = -sX+sZ; *n++ = 29; *a++ = 0; *n++ = 99;
   /* 30  1  0 -2 */   *a++ = -sX+sZ; *n++ = 29; *a++ = 0; *n++ = 99;
   /* 31  1 -1  2 */   *a++ = sY-sZ; *n++ = 51; *a++ = -sX-sZ; *n++ = 27;
   /* 32  1 -1  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 33  1 -1  0 */   *a++ = -sX+sY; *n++ = 33; *a++ = 0; *n++ = 99;
   /* 34  1 -1 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 35  1 -1 -2 */   *a++ = sY+sZ; *n++ = 53; *a++ = -sX+sZ; *n++ = 29;
   /* 36  1 -2  2 */   *a++ = sY-sZ; *n++ = 51; *a++ = 0; *n++ = 99;
   /* 37  1 -2  1 */   *a++ = sY-sZ; *n++ = 51; *a++ = -sX+sY; *n++ = 33;
   /* 38  1 -2  0 */   *a++ = -sX+sY; *n++ = 33; *a++ = 0; *n++ = 99;
   /* 39  1 -2 -1 */   *a++ = sY+sZ; *n++ = 53; *a++ = -sX+sY; *n++ = 33;
   /* 40  1 -2 -2 */   *a++ = sY+sZ; *n++ = 53; *a++ = 0; *n++ = 99;
   /* 41  0  2  1 */   *a++ = -sY-sZ; *n++ = 44; *a++ = 0; *n++ = 99;
   /* 42  0  2 -1 */   *a++ = -sY+sZ; *n++ = 46; *a++ = 0; *n++ = 99;
   /* 43  0  1  2 */   *a++ = -sY-sZ; *n++ = 44; *a++ = 0; *n++ = 99;
   /* 44  0  1  1 */   *a++ = -sY-sZ; *n++ = 44; *a++ = 0; *n++ = 99;
   /* 45  0  1  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 46  0  1 -1 */   *a++ = -sY+sZ; *n++ = 46; *a++ = 0; *n++ = 99;
   /* 47  0  1 -2 */   *a++ = -sY+sZ; *n++ = 46; *a++ = 0; *n++ = 99;
   /* 48  0  0  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 49  0  0 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 50  0 -1  2 */   *a++ = sY-sZ; *n++ = 51; *a++ = 0; *n++ = 99;
   /* 51  0 -1  1 */   *a++ = sY-sZ; *n++ = 51; *a++ = 0; *n++ = 99;
   /* 52  0 -1  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 53  0 -1 -1 */   *a++ = sY+sZ; *n++ = 53; *a++ = 0; *n++ = 99;
   /* 54  0 -1 -2 */   *a++ = sY+sZ; *n++ = 53; *a++ = 0; *n++ = 99;
   /* 55  0 -2  1 */   *a++ = sY-sZ; *n++ = 51; *a++ = 0; *n++ = 99;
   /* 56  0 -2 -1 */   *a++ = sY+sZ; *n++ = 53; *a++ = 0; *n++ = 99;
   /* 57 -1  2  2 */   *a++ = -sY-sZ; *n++ = 44; *a++ = 0; *n++ = 99;
   /* 58 -1  2  1 */   *a++ = sX-sY; *n++ = 64; *a++ = -sY-sZ; *n++ = 44;
   /* 59 -1  2  0 */   *a++ = sX-sY; *n++ = 64; *a++ = 0; *n++ = 99;
   /* 60 -1  2 -1 */   *a++ = sX-sY; *n++ = 64; *a++ = -sY+sZ; *n++ = 46;
   /* 61 -1  2 -2 */   *a++ = -sY+sZ; *n++ = 46; *a++ = 0; *n++ = 99;
   /* 62 -1  1  2 */   *a++ = sX-sZ; *n++ = 68; *a++ = -sY-sZ; *n++ = 44;
   /* 63 -1  1  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 64 -1  1  0 */   *a++ = sX-sY; *n++ = 64; *a++ = 0; *n++ = 99;
   /* 65 -1  1 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 66 -1  1 -2 */   *a++ = sX+sZ; *n++ = 70; *a++ = -sY+sZ; *n++ = 46;
   /* 67 -1  0  2 */   *a++ = sX-sZ; *n++ = 68; *a++ = 0; *n++ = 99;
   /* 68 -1  0  1 */   *a++ = sX-sZ; *n++ = 68; *a++ = 0; *n++ = 99;
   /* 69 -1  0  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 70 -1  0 -1 */   *a++ = sX+sZ; *n++ = 70; *a++ = 0; *n++ = 99;
   /* 71 -1  0 -2 */   *a++ = sX+sZ; *n++ = 70; *a++ = 0; *n++ = 99;
   /* 72 -1 -1  2 */   *a++ = sX-sZ; *n++ = 68; *a++ = sY-sZ; *n++ = 51;
   /* 73 -1 -1  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 74 -1 -1  0 */   *a++ = sX+sY; *n++ = 74; *a++ = 0; *n++ = 99;
   /* 75 -1 -1 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 76 -1 -1 -2 */   *a++ = sX+sZ; *n++ = 70; *a++ = sY+sZ; *n++ = 53;
   /* 77 -1 -2  2 */   *a++ = sY-sZ; *n++ = 51; *a++ = 0; *n++ = 99;
   /* 78 -1 -2  1 */   *a++ = sX+sY; *n++ = 74; *a++ = sY-sZ; *n++ = 51;
   /* 79 -1 -2  0 */   *a++ = sX+sY; *n++ = 74; *a++ = 0; *n++ = 99;
   /* 80 -1 -2 -1 */   *a++ = sX+sY; *n++ = 74; *a++ = sY+sZ; *n++ = 53;
   /* 81 -1 -2 -2 */   *a++ = sY+sZ; *n++ = 53; *a++ = 0; *n++ = 99;
   /* 82 -2  2  1 */   *a++ = sX-sY; *n++ = 64; *a++ = 0; *n++ = 99;
   /* 83 -2  2 -1 */   *a++ = sX-sY; *n++ = 64; *a++ = 0; *n++ = 99;
   /* 84 -2  1  2 */   *a++ = sX-sZ; *n++ = 68; *a++ = 0; *n++ = 99;
   /* 85 -2  1  1 */   *a++ = sX-sZ; *n++ = 68; *a++ = sX-sY; *n++ = 64;
   /* 86 -2  1  0 */   *a++ = sX-sY; *n++ = 64; *a++ = 0; *n++ = 99;
   /* 87 -2  1 -1 */   *a++ = sX+sZ; *n++ = 70; *a++ = sX-sY; *n++ = 64;
   /* 88 -2  1 -2 */   *a++ = sX+sZ; *n++ = 70; *a++ = 0; *n++ = 99;
   /* 89 -2  0  1 */   *a++ = sX-sZ; *n++ = 68; *a++ = 0; *n++ = 99;
   /* 90 -2  0 -1 */   *a++ = sX+sZ; *n++ = 70; *a++ = 0; *n++ = 99;
   /* 91 -2 -1  2 */   *a++ = sX-sZ; *n++ = 68; *a++ = 0; *n++ = 99;
   /* 92 -2 -1  1 */   *a++ = sX+sY; *n++ = 74; *a++ = sX-sZ; *n++ = 68;
   /* 93 -2 -1  0 */   *a++ = sX+sY; *n++ = 74; *a++ = 0; *n++ = 99;
   /* 94 -2 -1 -1 */   *a++ = sX+sY; *n++ = 74; *a++ = sX+sZ; *n++ = 70;
   /* 95 -2 -1 -2 */   *a++ = sX+sZ; *n++ = 70; *a++ = 0; *n++ = 99;
   /* 96 -2 -2  1 */   *a++ = sX+sY; *n++ = 74; *a++ = 0; *n++ = 99;
   /* 97 -2 -2 -1 */   *a++ = sX+sY; *n++ = 74; *a++ = 0; *n++ = 99;

   // DIST3 = 1732
   a = &a3[ 0 ][ 0 ];
   n = &n3[ 0 ][ 0 ];

   /*  0  2  2  1 */   *a++ = -sX-sY-sZ; *n++ = 22; *a++ = 0; *n++ = 99;
   /*  1  2  2 -1 */   *a++ = -sX-sY+sZ; *n++ = 24; *a++ = 0; *n++ = 99;
   /*  2  2  1  2 */   *a++ = -sX-sY-sZ; *n++ = 22; *a++ = 0; *n++ = 99;
   /*  3  2  1  1 */   *a++ = -sX-sY-sZ; *n++ = 22; *a++ = 0; *n++ = 99;
   /*  4  2  1  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /*  5  2  1 -1 */   *a++ = -sX-sY+sZ; *n++ = 24; *a++ = 0; *n++ = 99;
   /*  6  2  1 -2 */   *a++ = -sX-sY+sZ; *n++ = 24; *a++ = 0; *n++ = 99;
   /*  7  2  0  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /*  8  2  0 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /*  9  2 -1  2 */   *a++ = -sX+sY-sZ; *n++ = 32; *a++ = 0; *n++ = 99;
   /* 10  2 -1  1 */   *a++ = -sX+sY-sZ; *n++ = 32; *a++ = 0; *n++ = 99;
   /* 11  2 -1  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 12  2 -1 -1 */   *a++ = -sX+sY+sZ; *n++ = 34; *a++ = 0; *n++ = 99;
   /* 13  2 -1 -2 */   *a++ = -sX+sY+sZ; *n++ = 34; *a++ = 0; *n++ = 99;
   /* 14  2 -2  1 */   *a++ = -sX+sY-sZ; *n++ = 32; *a++ = 0; *n++ = 99;
   /* 15  2 -2 -1 */   *a++ = -sX+sY+sZ; *n++ = 34; *a++ = 0; *n++ = 99;
   /* 16  1  2  2 */   *a++ = -sX-sY-sZ; *n++ = 22; *a++ = 0; *n++ = 99;
   /* 17  1  2  1 */   *a++ = -sX-sY-sZ; *n++ = 22; *a++ = 0; *n++ = 99;
   /* 18  1  2  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 19  1  2 -1 */   *a++ = -sX-sY+sZ; *n++ = 24; *a++ = 0; *n++ = 99;
   /* 20  1  2 -2 */   *a++ = -sX-sY+sZ; *n++ = 24; *a++ = 0; *n++ = 99;
   /* 21  1  1  2 */   *a++ = -sX-sY-sZ; *n++ = 22; *a++ = 0; *n++ = 99;
   /* 22  1  1  1 */   *a++ = -sX-sY-sZ; *n++ = 22; *a++ = 0; *n++ = 99;
   /* 23  1  1  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 24  1  1 -1 */   *a++ = -sX-sY+sZ; *n++ = 24; *a++ = 0; *n++ = 99;
   /* 25  1  1 -2 */   *a++ = -sX-sY+sZ; *n++ = 24; *a++ = 0; *n++ = 99;
   /* 26  1  0  2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 27  1  0  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 28  1  0  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 29  1  0 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 30  1  0 -2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 31  1 -1  2 */   *a++ = -sX+sY-sZ; *n++ = 32; *a++ = 0; *n++ = 99;
   /* 32  1 -1  1 */   *a++ = -sX+sY-sZ; *n++ = 32; *a++ = 0; *n++ = 99;
   /* 33  1 -1  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 34  1 -1 -1 */   *a++ = -sX+sY+sZ; *n++ = 34; *a++ = 0; *n++ = 99;
   /* 35  1 -1 -2 */   *a++ = -sX+sY+sZ; *n++ = 34; *a++ = 0; *n++ = 99;
   /* 36  1 -2  2 */   *a++ = -sX+sY-sZ; *n++ = 32; *a++ = 0; *n++ = 99;
   /* 37  1 -2  1 */   *a++ = -sX+sY-sZ; *n++ = 32; *a++ = 0; *n++ = 99;
   /* 38  1 -2  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 39  1 -2 -1 */   *a++ = -sX+sY+sZ; *n++ = 34; *a++ = 0; *n++ = 99;
   /* 40  1 -2 -2 */   *a++ = -sX+sY+sZ; *n++ = 34; *a++ = 0; *n++ = 99;
   /* 41  0  2  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 42  0  2 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 43  0  1  2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 44  0  1  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 45  0  1  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 46  0  1 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 47  0  1 -2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 48  0  0  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 49  0  0 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 50  0 -1  2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 51  0 -1  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 52  0 -1  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 53  0 -1 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 54  0 -1 -2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 55  0 -2  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 56  0 -2 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 57 -1  2  2 */   *a++ = sX-sY-sZ; *n++ = 63; *a++ = 0; *n++ = 99;
   /* 58 -1  2  1 */   *a++ = sX-sY-sZ; *n++ = 63; *a++ = 0; *n++ = 99;
   /* 59 -1  2  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 60 -1  2 -1 */   *a++ = sX-sY+sZ; *n++ = 65; *a++ = 0; *n++ = 99;
   /* 61 -1  2 -2 */   *a++ = sX-sY+sZ; *n++ = 65; *a++ = 0; *n++ = 99;
   /* 62 -1  1  2 */   *a++ = sX-sY-sZ; *n++ = 63; *a++ = 0; *n++ = 99;
   /* 63 -1  1  1 */   *a++ = sX-sY-sZ; *n++ = 63; *a++ = 0; *n++ = 99;
   /* 64 -1  1  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 65 -1  1 -1 */   *a++ = sX-sY+sZ; *n++ = 65; *a++ = 0; *n++ = 99;
   /* 66 -1  1 -2 */   *a++ = sX-sY+sZ; *n++ = 65; *a++ = 0; *n++ = 99;
   /* 67 -1  0  2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 68 -1  0  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 69 -1  0  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 70 -1  0 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 71 -1  0 -2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 72 -1 -1  2 */   *a++ = sX+sY-sZ; *n++ = 73; *a++ = 0; *n++ = 99;
   /* 73 -1 -1  1 */   *a++ = sX+sY-sZ; *n++ = 73; *a++ = 0; *n++ = 99;
   /* 74 -1 -1  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 75 -1 -1 -1 */   *a++ = sX+sY+sZ; *n++ = 75; *a++ = 0; *n++ = 99;
   /* 76 -1 -1 -2 */   *a++ = sX+sY+sZ; *n++ = 75; *a++ = 0; *n++ = 99;
   /* 77 -1 -2  2 */   *a++ = sX+sY-sZ; *n++ = 73; *a++ = 0; *n++ = 99;
   /* 78 -1 -2  1 */   *a++ = sX+sY-sZ; *n++ = 73; *a++ = 0; *n++ = 99;
   /* 79 -1 -2  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 80 -1 -2 -1 */   *a++ = sX+sY+sZ; *n++ = 75; *a++ = 0; *n++ = 99;
   /* 81 -1 -2 -2 */   *a++ = sX+sY+sZ; *n++ = 75; *a++ = 0; *n++ = 99;
   /* 82 -2  2  1 */   *a++ = sX-sY-sZ; *n++ = 63; *a++ = 0; *n++ = 99;
   /* 83 -2  2 -1 */   *a++ = sX-sY+sZ; *n++ = 65; *a++ = 0; *n++ = 99;
   /* 84 -2  1  2 */   *a++ = sX-sY-sZ; *n++ = 63; *a++ = 0; *n++ = 99;
   /* 85 -2  1  1 */   *a++ = sX-sY-sZ; *n++ = 63; *a++ = 0; *n++ = 99;
   /* 86 -2  1  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 87 -2  1 -1 */   *a++ = sX-sY+sZ; *n++ = 65; *a++ = 0; *n++ = 99;
   /* 88 -2  1 -2 */   *a++ = sX-sY+sZ; *n++ = 65; *a++ = 0; *n++ = 99;
   /* 89 -2  0  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 90 -2  0 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 91 -2 -1  2 */   *a++ = sX+sY-sZ; *n++ = 73; *a++ = 0; *n++ = 99;
   /* 92 -2 -1  1 */   *a++ = sX+sY-sZ; *n++ = 73; *a++ = 0; *n++ = 99;
   /* 93 -2 -1  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 94 -2 -1 -1 */   *a++ = sX+sY+sZ; *n++ = 75; *a++ = 0; *n++ = 99;
   /* 95 -2 -1 -2 */   *a++ = sX+sY+sZ; *n++ = 75; *a++ = 0; *n++ = 99;
   /* 96 -2 -2  1 */   *a++ = sX+sY-sZ; *n++ = 73; *a++ = 0; *n++ = 99;
   /* 97 -2 -2 -1 */   *a++ = sX+sY+sZ; *n++ = 75; *a++ = 0; *n++ = 99;

   // DIST5 = 2236
   a = &a5[ 0 ][ 0 ];
   n = &n5[ 0 ][ 0 ];

   /*  0  2  2  1 */   *a++ = -sX-2*sY; *n++ = 18; *a++ = -2*sX-sY; *n++ =  4;
   /*  1  2  2 -1 */   *a++ = -sX-2*sY; *n++ = 18; *a++ = -2*sX-sY; *n++ =  4;
   /*  2  2  1  2 */   *a++ = -sX-2*sZ; *n++ = 26; *a++ = -2*sX-sZ; *n++ =  7;
   /*  3  2  1  1 */   *a++ = -2*sX-sZ; *n++ =  7; *a++ = -2*sX-sY; *n++ =  4;
   /*  4  2  1  0 */   *a++ = -2*sX-sY; *n++ =  4; *a++ = 0; *n++ = 99;
   /*  5  2  1 -1 */   *a++ = -2*sX+sZ; *n++ =  8; *a++ = -2*sX-sY; *n++ =  4;
   /*  6  2  1 -2 */   *a++ = -sX+2*sZ; *n++ = 30; *a++ = -2*sX+sZ; *n++ =  8;
   /*  7  2  0  1 */   *a++ = -2*sX-sZ; *n++ =  7; *a++ = 0; *n++ = 99;
   /*  8  2  0 -1 */   *a++ = -2*sX+sZ; *n++ =  8; *a++ = 0; *n++ = 99;
   /*  9  2 -1  2 */   *a++ = -sX-2*sZ; *n++ = 26; *a++ = -2*sX-sZ; *n++ =  7;
   /* 10  2 -1  1 */   *a++ = -2*sX+sY; *n++ = 11; *a++ = -2*sX-sZ; *n++ =  7;
   /* 11  2 -1  0 */   *a++ = -2*sX+sY; *n++ = 11; *a++ = 0; *n++ = 99;
   /* 12  2 -1 -1 */   *a++ = -2*sX+sY; *n++ = 11; *a++ = -2*sX+sZ; *n++ =  8;
   /* 13  2 -1 -2 */   *a++ = -sX+2*sZ; *n++ = 30; *a++ = -2*sX+sZ; *n++ =  8;
   /* 14  2 -2  1 */   *a++ = -sX+2*sY; *n++ = 38; *a++ = -2*sX+sY; *n++ = 11;
   /* 15  2 -2 -1 */   *a++ = -sX+2*sY; *n++ = 38; *a++ = -2*sX+sY; *n++ = 11;
   /* 16  1  2  2 */   *a++ = -sY-2*sZ; *n++ = 43; *a++ = -2*sY-sZ; *n++ = 41;
   /* 17  1  2  1 */   *a++ = -2*sY-sZ; *n++ = 41; *a++ = -sX-2*sY; *n++ = 18;
   /* 18  1  2  0 */   *a++ = -sX-2*sY; *n++ = 18; *a++ = 0; *n++ = 99;
   /* 19  1  2 -1 */   *a++ = -2*sY+sZ; *n++ = 42; *a++ = -sX-2*sY; *n++ = 18;
   /* 20  1  2 -2 */   *a++ = -sY+2*sZ; *n++ = 47; *a++ = -2*sY+sZ; *n++ = 42;
   /* 21  1  1  2 */   *a++ = -sY-2*sZ; *n++ = 43; *a++ = -sX-2*sZ; *n++ = 26;
   /* 22  1  1  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 23  1  1  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 24  1  1 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 25  1  1 -2 */   *a++ = -sY+2*sZ; *n++ = 47; *a++ = -sX+2*sZ; *n++ = 30;
   /* 26  1  0  2 */   *a++ = -sX-2*sZ; *n++ = 26; *a++ = 0; *n++ = 99;
   /* 27  1  0  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 28  1  0  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 29  1  0 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 30  1  0 -2 */   *a++ = -sX+2*sZ; *n++ = 30; *a++ = 0; *n++ = 99;
   /* 31  1 -1  2 */   *a++ = sY-2*sZ; *n++ = 50; *a++ = -sX-2*sZ; *n++ = 26;
   /* 32  1 -1  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 33  1 -1  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 34  1 -1 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 35  1 -1 -2 */   *a++ = sY+2*sZ; *n++ = 54; *a++ = -sX+2*sZ; *n++ = 30;
   /* 36  1 -2  2 */   *a++ = 2*sY-sZ; *n++ = 55; *a++ = sY-2*sZ; *n++ = 50;
   /* 37  1 -2  1 */   *a++ = 2*sY-sZ; *n++ = 55; *a++ = -sX+2*sY; *n++ = 38;
   /* 38  1 -2  0 */   *a++ = -sX+2*sY; *n++ = 38; *a++ = 0; *n++ = 99;
   /* 39  1 -2 -1 */   *a++ = 2*sY+sZ; *n++ = 56; *a++ = -sX+2*sY; *n++ = 38;
   /* 40  1 -2 -2 */   *a++ = 2*sY+sZ; *n++ = 56; *a++ = sY+2*sZ; *n++ = 54;
   /* 41  0  2  1 */   *a++ = -2*sY-sZ; *n++ = 41; *a++ = 0; *n++ = 99;
   /* 42  0  2 -1 */   *a++ = -2*sY+sZ; *n++ = 42; *a++ = 0; *n++ = 99;
   /* 43  0  1  2 */   *a++ = -sY-2*sZ; *n++ = 43; *a++ = 0; *n++ = 99;
   /* 44  0  1  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 45  0  1  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 46  0  1 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 47  0  1 -2 */   *a++ = -sY+2*sZ; *n++ = 47; *a++ = 0; *n++ = 99;
   /* 48  0  0  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 49  0  0 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 50  0 -1  2 */   *a++ = sY-2*sZ; *n++ = 50; *a++ = 0; *n++ = 99;
   /* 51  0 -1  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 52  0 -1  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 53  0 -1 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 54  0 -1 -2 */   *a++ = sY+2*sZ; *n++ = 54; *a++ = 0; *n++ = 99;
   /* 55  0 -2  1 */   *a++ = 2*sY-sZ; *n++ = 55; *a++ = 0; *n++ = 99;
   /* 56  0 -2 -1 */   *a++ = 2*sY+sZ; *n++ = 56; *a++ = 0; *n++ = 99;
   /* 57 -1  2  2 */   *a++ = -sY-2*sZ; *n++ = 43; *a++ = -2*sY-sZ; *n++ = 41;
   /* 58 -1  2  1 */   *a++ = sX-2*sY; *n++ = 59; *a++ = -2*sY-sZ; *n++ = 41;
   /* 59 -1  2  0 */   *a++ = sX-2*sY; *n++ = 59; *a++ = 0; *n++ = 99;
   /* 60 -1  2 -1 */   *a++ = sX-2*sY; *n++ = 59; *a++ = -2*sY+sZ; *n++ = 42;
   /* 61 -1  2 -2 */   *a++ = -sY+2*sZ; *n++ = 47; *a++ = -2*sY+sZ; *n++ = 42;
   /* 62 -1  1  2 */   *a++ = sX-2*sZ; *n++ = 67; *a++ = -sY-2*sZ; *n++ = 43;
   /* 63 -1  1  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 64 -1  1  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 65 -1  1 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 66 -1  1 -2 */   *a++ = sX+2*sZ; *n++ = 71; *a++ = -sY+2*sZ; *n++ = 47;
   /* 67 -1  0  2 */   *a++ = sX-2*sZ; *n++ = 67; *a++ = 0; *n++ = 99;
   /* 68 -1  0  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 69 -1  0  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 70 -1  0 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 71 -1  0 -2 */   *a++ = sX+2*sZ; *n++ = 71; *a++ = 0; *n++ = 99;
   /* 72 -1 -1  2 */   *a++ = sX-2*sZ; *n++ = 67; *a++ = sY-2*sZ; *n++ = 50;
   /* 73 -1 -1  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 74 -1 -1  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 75 -1 -1 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 76 -1 -1 -2 */   *a++ = sX+2*sZ; *n++ = 71; *a++ = sY+2*sZ; *n++ = 54;
   /* 77 -1 -2  2 */   *a++ = 2*sY-sZ; *n++ = 55; *a++ = sY-2*sZ; *n++ = 50;
   /* 78 -1 -2  1 */   *a++ = sX+2*sY; *n++ = 79; *a++ = 2*sY-sZ; *n++ = 55;
   /* 79 -1 -2  0 */   *a++ = sX+2*sY; *n++ = 79; *a++ = 0; *n++ = 99;
   /* 80 -1 -2 -1 */   *a++ = sX+2*sY; *n++ = 79; *a++ = 2*sY+sZ; *n++ = 56;
   /* 81 -1 -2 -2 */   *a++ = 2*sY+sZ; *n++ = 56; *a++ = sY+2*sZ; *n++ = 54;
   /* 82 -2  2  1 */   *a++ = 2*sX-sY; *n++ = 86; *a++ = sX-2*sY; *n++ = 59;
   /* 83 -2  2 -1 */   *a++ = 2*sX-sY; *n++ = 86; *a++ = sX-2*sY; *n++ = 59;
   /* 84 -2  1  2 */   *a++ = 2*sX-sZ; *n++ = 89; *a++ = sX-2*sZ; *n++ = 67;
   /* 85 -2  1  1 */   *a++ = 2*sX-sZ; *n++ = 89; *a++ = 2*sX-sY; *n++ = 86;
   /* 86 -2  1  0 */   *a++ = 2*sX-sY; *n++ = 86; *a++ = 0; *n++ = 99;
   /* 87 -2  1 -1 */   *a++ = 2*sX+sZ; *n++ = 90; *a++ = 2*sX-sY; *n++ = 86;
   /* 88 -2  1 -2 */   *a++ = 2*sX+sZ; *n++ = 90; *a++ = sX+2*sZ; *n++ = 71;
   /* 89 -2  0  1 */   *a++ = 2*sX-sZ; *n++ = 89; *a++ = 0; *n++ = 99;
   /* 90 -2  0 -1 */   *a++ = 2*sX+sZ; *n++ = 90; *a++ = 0; *n++ = 99;
   /* 91 -2 -1  2 */   *a++ = 2*sX-sZ; *n++ = 89; *a++ = sX-2*sZ; *n++ = 67;
   /* 92 -2 -1  1 */   *a++ = 2*sX+sY; *n++ = 93; *a++ = 2*sX-sZ; *n++ = 89;
   /* 93 -2 -1  0 */   *a++ = 2*sX+sY; *n++ = 93; *a++ = 0; *n++ = 99;
   /* 94 -2 -1 -1 */   *a++ = 2*sX+sY; *n++ = 93; *a++ = 2*sX+sZ; *n++ = 90;
   /* 95 -2 -1 -2 */   *a++ = 2*sX+sZ; *n++ = 90; *a++ = sX+2*sZ; *n++ = 71;
   /* 96 -2 -2  1 */   *a++ = 2*sX+sY; *n++ = 93; *a++ = sX+2*sY; *n++ = 79;
   /* 97 -2 -2 -1 */   *a++ = 2*sX+sY; *n++ = 93; *a++ = sX+2*sY; *n++ = 79;

   // DIST6 = 2449
   a = &a6[ 0 ][ 0 ];
   n = &n6[ 0 ][ 0 ];

   /*  0  2  2  1 */ *a++ = -sX-2*sY-sZ; *n++ = 17; *a++ = -2*sX-sY-sZ; *n++ =3;
   /*  1  2  2 -1 */ *a++ = -sX-2*sY+sZ; *n++ = 19; *a++ = -2*sX-sY+sZ; *n++ =5;
   /*  2  2  1  2 */ *a++ = -sX-sY-2*sZ; *n++ = 21; *a++ = -2*sX-sY-sZ; *n++ =3;
   /*  3  2  1  1 */ *a++ = -2*sX-sY-sZ; *n++ =  3; *a++ = 0; *n++ = 99;
   /*  4  2  1  0 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /*  5  2  1 -1 */ *a++ = -2*sX-sY+sZ; *n++ =  5; *a++ = 0; *n++ = 99;
   /*  6  2  1 -2 */ *a++ = -sX-sY+2*sZ; *n++ = 25; *a++ = -2*sX-sY+sZ;*n++ =5;
   /*  7  2  0  1 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /*  8  2  0 -1 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /*  9  2 -1  2 */ *a++ = -sX+sY-2*sZ; *n++ = 31; *a++ = -2*sX+sY-sZ;*n++ =10;
   /* 10  2 -1  1 */ *a++ = -2*sX+sY-sZ; *n++ = 10; *a++ = 0; *n++ = 99;
   /* 11  2 -1  0 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 12  2 -1 -1 */ *a++ = -2*sX+sY+sZ; *n++ = 12; *a++ = 0; *n++ = 99;
   /* 13  2 -1 -2 */ *a++ = -sX+sY+2*sZ; *n++ = 35; *a++ = -2*sX+sY+sZ;*n++ =12;
   /* 14  2 -2  1 */ *a++ = -sX+2*sY-sZ; *n++ = 37; *a++ = -2*sX+sY-sZ;*n++ =10;
   /* 15  2 -2 -1 */ *a++ = -sX+2*sY+sZ; *n++ = 39; *a++ = -2*sX+sY+sZ;*n++ =12;
   /* 16  1  2  2 */ *a++ = -sX-sY-2*sZ; *n++ = 21; *a++ = -sX-2*sY-sZ;*n++ =17;
   /* 17  1  2  1 */ *a++ = -sX-2*sY-sZ; *n++ = 17; *a++ = 0; *n++ = 99;
   /* 18  1  2  0 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 19  1  2 -1 */ *a++ = -sX-2*sY+sZ; *n++ = 19; *a++ = 0; *n++ = 99;
   /* 20  1  2 -2 */ *a++ = -sX-sY+2*sZ; *n++ = 25; *a++ = -sX-2*sY+sZ;*n++ =19;
   /* 21  1  1  2 */ *a++ = -sX-sY-2*sZ; *n++ = 21; *a++ = 0; *n++ = 99;
   /* 22  1  1  1 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 23  1  1  0 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 24  1  1 -1 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 25  1  1 -2 */ *a++ = -sX-sY+2*sZ; *n++ = 25; *a++ = 0; *n++ = 99;
   /* 26  1  0  2 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 27  1  0  1 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 28  1  0  0 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 29  1  0 -1 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 30  1  0 -2 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 31  1 -1  2 */ *a++ = -sX+sY-2*sZ; *n++ = 31; *a++ = 0; *n++ = 99;
   /* 32  1 -1  1 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 33  1 -1  0 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 34  1 -1 -1 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 35  1 -1 -2 */ *a++ = -sX+sY+2*sZ; *n++ = 35; *a++ = 0; *n++ = 99;
   /* 36  1 -2  2 */ *a++ = -sX+2*sY-sZ; *n++ = 37; *a++ = -sX+sY-2*sZ;*n++ =31;
   /* 37  1 -2  1 */ *a++ = -sX+2*sY-sZ; *n++ = 37; *a++ = 0; *n++ = 99;
   /* 38  1 -2  0 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 39  1 -2 -1 */ *a++ = -sX+2*sY+sZ; *n++ = 39; *a++ = 0; *n++ = 99;
   /* 40  1 -2 -2 */ *a++ = -sX+2*sY+sZ; *n++ = 39; *a++ = -sX+sY+2*sZ;*n++ =35;
   /* 41  0  2  1 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 42  0  2 -1 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 43  0  1  2 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 44  0  1  1 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 45  0  1  0 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 46  0  1 -1 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 47  0  1 -2 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 48  0  0  1 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 49  0  0 -1 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 50  0 -1  2 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 51  0 -1  1 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 52  0 -1  0 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 53  0 -1 -1 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 54  0 -1 -2 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 55  0 -2  1 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 56  0 -2 -1 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 57 -1  2  2 */ *a++ = sX-sY-2*sZ; *n++ = 62; *a++ = sX-2*sY-sZ; *n++ = 58;
   /* 58 -1  2  1 */ *a++ = sX-2*sY-sZ; *n++ = 58; *a++ = 0; *n++ = 99;
   /* 59 -1  2  0 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 60 -1  2 -1 */ *a++ = sX-2*sY+sZ; *n++ = 60; *a++ = 0; *n++ = 99;
   /* 61 -1  2 -2 */ *a++ = sX-sY+2*sZ; *n++ = 66; *a++ = sX-2*sY+sZ; *n++ = 60;
   /* 62 -1  1  2 */ *a++ = sX-sY-2*sZ; *n++ = 62; *a++ = 0; *n++ = 99;
   /* 63 -1  1  1 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 64 -1  1  0 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 65 -1  1 -1 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 66 -1  1 -2 */ *a++ = sX-sY+2*sZ; *n++ = 66; *a++ = 0; *n++ = 99;
   /* 67 -1  0  2 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 68 -1  0  1 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 69 -1  0  0 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 70 -1  0 -1 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 71 -1  0 -2 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 72 -1 -1  2 */ *a++ = sX+sY-2*sZ; *n++ = 72; *a++ = 0; *n++ = 99;
   /* 73 -1 -1  1 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 74 -1 -1  0 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 75 -1 -1 -1 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 76 -1 -1 -2 */ *a++ = sX+sY+2*sZ; *n++ = 76; *a++ = 0; *n++ = 99;
   /* 77 -1 -2  2 */ *a++ = sX+2*sY-sZ; *n++ = 78; *a++ = sX+sY-2*sZ; *n++ = 72;
   /* 78 -1 -2  1 */ *a++ = sX+2*sY-sZ; *n++ = 78; *a++ = 0; *n++ = 99;
   /* 79 -1 -2  0 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 80 -1 -2 -1 */ *a++ = sX+2*sY+sZ; *n++ = 80; *a++ = 0; *n++ = 99;
   /* 81 -1 -2 -2 */ *a++ = sX+2*sY+sZ; *n++ = 80; *a++ = sX+sY+2*sZ; *n++ = 76;
   /* 82 -2  2  1 */ *a++ = 2*sX-sY-sZ; *n++ = 85; *a++ = sX-2*sY-sZ; *n++ = 58;
   /* 83 -2  2 -1 */ *a++ = 2*sX-sY+sZ; *n++ = 87; *a++ = sX-2*sY+sZ; *n++ = 60;
   /* 84 -2  1  2 */ *a++ = 2*sX-sY-sZ; *n++ = 85; *a++ = sX-sY-2*sZ; *n++ = 62;
   /* 85 -2  1  1 */ *a++ = 2*sX-sY-sZ; *n++ = 85; *a++ = 0; *n++ = 99;
   /* 86 -2  1  0 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 87 -2  1 -1 */ *a++ = 2*sX-sY+sZ; *n++ = 87; *a++ = 0; *n++ = 99;
   /* 88 -2  1 -2 */ *a++ = 2*sX-sY+sZ; *n++ = 87; *a++ = sX-sY+2*sZ; *n++ = 66;
   /* 89 -2  0  1 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 90 -2  0 -1 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 91 -2 -1  2 */ *a++ = 2*sX+sY-sZ; *n++ = 92; *a++ = sX+sY-2*sZ; *n++ = 72;
   /* 92 -2 -1  1 */ *a++ = 2*sX+sY-sZ; *n++ = 92; *a++ = 0; *n++ = 99;
   /* 93 -2 -1  0 */ *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 94 -2 -1 -1 */ *a++ = 2*sX+sY+sZ; *n++ = 94; *a++ = 0; *n++ = 99;
   /* 95 -2 -1 -2 */ *a++ = 2*sX+sY+sZ; *n++ = 94; *a++ = sX+sY+2*sZ; *n++ = 76;
   /* 96 -2 -2  1 */ *a++ = 2*sX+sY-sZ; *n++ = 92; *a++ = sX+2*sY-sZ; *n++ = 78;
   /* 97 -2 -2 -1 */ *a++ = 2*sX+sY+sZ; *n++ = 94; *a++ = sX+2*sY+sZ; *n++ = 80;

   // DIST9 = 3000
   a = &a9[ 0 ][ 0 ];
   n = &n9[ 0 ][ 0 ];

   /*  0  2  2  1 */   *a++ = -2*sX-2*sY-sZ; *n++ =  0; *a++ = 0; *n++ = 99;
   /*  1  2  2 -1 */   *a++ = -2*sX-2*sY+sZ; *n++ =  1; *a++ = 0; *n++ = 99;
   /*  2  2  1  2 */   *a++ = -2*sX-sY-2*sZ; *n++ =  2; *a++ = 0; *n++ = 99;
   /*  3  2  1  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /*  4  2  1  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /*  5  2  1 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /*  6  2  1 -2 */   *a++ = -2*sX-sY+2*sZ; *n++ =  6; *a++ = 0; *n++ = 99;
   /*  7  2  0  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /*  8  2  0 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /*  9  2 -1  2 */   *a++ = -2*sX+sY-2*sZ; *n++ =  9; *a++ = 0; *n++ = 99;
   /* 10  2 -1  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 11  2 -1  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 12  2 -1 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 13  2 -1 -2 */   *a++ = -2*sX+sY+2*sZ; *n++ = 13; *a++ = 0; *n++ = 99;
   /* 14  2 -2  1 */   *a++ = -2*sX+2*sY-sZ; *n++ = 14; *a++ = 0; *n++ = 99;
   /* 15  2 -2 -1 */   *a++ = -2*sX+2*sY+sZ; *n++ = 15; *a++ = 0; *n++ = 99;
   /* 16  1  2  2 */   *a++ = -sX-2*sY-2*sZ; *n++ = 16; *a++ = 0; *n++ = 99;
   /* 17  1  2  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 18  1  2  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 19  1  2 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 20  1  2 -2 */   *a++ = -sX-2*sY+2*sZ; *n++ = 20; *a++ = 0; *n++ = 99;
   /* 21  1  1  2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 22  1  1  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 23  1  1  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 24  1  1 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 25  1  1 -2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 26  1  0  2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 27  1  0  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 28  1  0  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 29  1  0 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 30  1  0 -2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 31  1 -1  2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 32  1 -1  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 33  1 -1  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 34  1 -1 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 35  1 -1 -2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 36  1 -2  2 */   *a++ = -sX+2*sY-2*sZ; *n++ = 36; *a++ = 0; *n++ = 99;
   /* 37  1 -2  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 38  1 -2  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 39  1 -2 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 40  1 -2 -2 */   *a++ = -sX+2*sY+2*sZ; *n++ = 40; *a++ = 0; *n++ = 99;
   /* 41  0  2  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 42  0  2 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 43  0  1  2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 44  0  1  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 45  0  1  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 46  0  1 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 47  0  1 -2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 48  0  0  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 49  0  0 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 50  0 -1  2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 51  0 -1  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 52  0 -1  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 53  0 -1 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 54  0 -1 -2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 55  0 -2  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 56  0 -2 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 57 -1  2  2 */   *a++ = sX-2*sY-2*sZ; *n++ = 57; *a++ = 0; *n++ = 99;
   /* 58 -1  2  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 59 -1  2  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 60 -1  2 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 61 -1  2 -2 */   *a++ = sX-2*sY+2*sZ; *n++ = 61; *a++ = 0; *n++ = 99;
   /* 62 -1  1  2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 63 -1  1  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 64 -1  1  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 65 -1  1 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 66 -1  1 -2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 67 -1  0  2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 68 -1  0  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 69 -1  0  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 70 -1  0 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 71 -1  0 -2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 72 -1 -1  2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 73 -1 -1  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 74 -1 -1  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 75 -1 -1 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 76 -1 -1 -2 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 77 -1 -2  2 */   *a++ = sX+2*sY-2*sZ; *n++ = 77; *a++ = 0; *n++ = 99;
   /* 78 -1 -2  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 79 -1 -2  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 80 -1 -2 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 81 -1 -2 -2 */   *a++ = sX+2*sY+2*sZ; *n++ = 81; *a++ = 0; *n++ = 99;
   /* 82 -2  2  1 */   *a++ = 2*sX-2*sY-sZ; *n++ = 82; *a++ = 0; *n++ = 99;
   /* 83 -2  2 -1 */   *a++ = 2*sX-2*sY+sZ; *n++ = 83; *a++ = 0; *n++ = 99;
   /* 84 -2  1  2 */   *a++ = 2*sX-sY-2*sZ; *n++ = 84; *a++ = 0; *n++ = 99;
   /* 85 -2  1  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 86 -2  1  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 87 -2  1 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 88 -2  1 -2 */   *a++ = 2*sX-sY+2*sZ; *n++ = 88; *a++ = 0; *n++ = 99;
   /* 89 -2  0  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 90 -2  0 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 91 -2 -1  2 */   *a++ = 2*sX+sY-2*sZ; *n++ = 91; *a++ = 0; *n++ = 99;
   /* 92 -2 -1  1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 93 -2 -1  0 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 94 -2 -1 -1 */   *a++ = 0; *n++ = 99; *a++ = 0; *n++ = 99;
   /* 95 -2 -1 -2 */   *a++ = 2*sX+sY+2*sZ; *n++ = 95; *a++ = 0; *n++ = 99;
   /* 96 -2 -2  1 */   *a++ = 2*sX+2*sY-sZ; *n++ = 96; *a++ = 0; *n++ = 99;
   /* 97 -2 -2 -1 */   *a++ = 2*sX+2*sY+sZ; *n++ = 97; *a++ = 0; *n++ = 99;

   // Skeleton goes in 3 scans per iterations, each scan a different contour
   bvcontour[ 0 ][ 0 ] = sX;
   bvcontour[ 0 ][ 1 ] = sX - sY;
   bvcontour[ 0 ][ 2 ] = -sY;
   bvcontour[ 1 ][ 0 ] = sY;
   bvcontour[ 1 ][ 1 ] = sY - sZ;
   bvcontour[ 1 ][ 2 ] = -sZ;
   bvcontour[ 2 ][ 0 ] = sZ;
   bvcontour[ 2 ][ 1 ] = -sX + sZ;
   bvcontour[ 2 ][ 2 ] = -sX;

   // Fast endpixel treatment, 0 means no-endpixel, 1 means endpixel, 2 means additional neighbours have to be checked
   *e++ = ENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
   *e++ = 19; *e++ = 21; *e++ = 23; *e++ = 25;
   *e++ = 1; *e++ = 3; *e++ = 5; *e++ = 7;
   *e++ = ENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
   *e++ = 3; *e++ = 9; *e++ = 15; *e++ = 21;
   *e++ = 18; *e++ = 21; *e++ = 24; *e++ = NOENTRY;
   *e++ = 0; *e++ = 3; *e++ = 6; *e++ = NOENTRY;
   *e++ = ENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
   *e++ = 5; *e++ = 11; *e++ = 17; *e++ = 23;
   *e++ = 20; *e++ = 23; *e++ = 26; *e++ = NOENTRY;
   *e++ = 2; *e++ = 5; *e++ = 8; *e++ = NOENTRY;
   *e++ = ENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
   *e++ = ENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
   *e++ = ENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
   *e++ = ENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
   *e++ = ENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
   *e++ = 7; *e++ = 15; *e++ = 17; *e++ = 25;
   *e++ = 24; *e++ = 25; *e++ = 26; *e++ = NOENTRY;
   *e++ = 6; *e++ = 7; *e++ = 8; *e++ = NOENTRY;
   *e++ = ENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
   *e++ = 6; *e++ = 15; *e++ = 24; *e++ = NOENTRY;
   *e++ = 15; *e++ = 21; *e++ = 25; *e++ = NOENTRY;
   *e++ = 3; *e++ = 7; *e++ = 15; *e++ = NOENTRY;
   *e++ = ENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
   *e++ = 8; *e++ = 17; *e++ = 26; *e++ = NOENTRY;
   *e++ = 17; *e++ = 23; *e++ = 25; *e++ = NOENTRY;
   *e++ = 5; *e++ = 7; *e++ = 17; *e++ = NOENTRY;
   *e++ = NOENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
   *e++ = ENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
   *e++ = NOENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
   *e++ = NOENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
   *e++ = NOENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
   *e++ = 1; *e++ = 9; *e++ = 11; *e++ = 19;
   *e++ = 18; *e++ = 19; *e++ = 20; *e++ = NOENTRY;
   *e++ = 0; *e++ = 1; *e++ = 2; *e++ = NOENTRY;
   *e++ = ENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
   *e++ = 0; *e++ = 9; *e++ = 18; *e++ = NOENTRY;
   *e++ = 9; *e++ = 19; *e++ = 21; *e++ = NOENTRY;
   *e++ = 1; *e++ = 3; *e++ = 9; *e++ = NOENTRY;
   *e++ = NOENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
   *e++ = 2; *e++ = 11; *e++ = 20; *e++ = NOENTRY;
   *e++ = 11; *e++ = 19; *e++ = 23; *e++ = NOENTRY;
   *e++ = 1; *e++ = 5; *e++ = 11; *e++ = NOENTRY;
   *e++ = NOENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
   *e++ = ENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
   *e++ = NOENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
   *e++ = NOENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
   *e++ = NOENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
   *e++ = ENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
   *e++ = ENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
   *e++ = ENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
   *e++ = ENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
   *e++ = ENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
   *e++ = NOENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
   *e++ = NOENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
   *e++ = NOENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
   *e++ = ENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
   *e++ = NOENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
   *e++ = NOENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
   *e++ = NOENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
   *e++ = ENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
   *e++ = NOENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
   *e++ = NOENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
   *e++ = NOENDPIXEL; *e++ = NOENTRY; *e++ = NOENTRY; *e++ = NOENTRY;
}

// Euler numbers for 2*2*2 subcubes
constexpr sint8 euler[ 256 ] = {
      0, 1, 1, 0, 1, 0, 2, -1, 1, 2, 0, -1, 0, -1, -1, 0, 1, 0, 2, -1, 2, -1, 3,
      -2, 2, 1, 1, -2, 1, -2, 0, -1, 1, 2, 0, -1, 2, 1, 1, -2, 2, 3, -1, -2, 1,
      0, -2, -1, 0, -1, -1, 0, 1, -2, 0, -1, 1, 0, -2, -1, 0, -3, -3, 0, 1, 2, 2,
      1, 0, -1, 1, -2, 2, 3, 1, 0, -1, -2, -2, -1, 0, -1, 1, -2, -1, 0, 0, -1, 1,
      0, 0, -3, -2, -1, -3, 0, 2, 3, 1, 0, 1, 0, 0, -3, 3, 4, 0, -1, 0, -1, -3,
      -2, -1, -2, -2, -1, -2, -1, -3, 0, 0, -1, -3, -2, -3, -2, -6, 1, 1, 2, 2,
      1, 2, 1, 3, 0, 0, 1, -1, -2, -1, -2, -2, -1, 2, 1, 3, 0, 3, 0, 4, -1, 1, 0,
      0, -3, 0, -3, -1, -2, 0, 1, -1, -2, 1, 0, 0, -3, -1, 0, 0, -1, -2, -3, -1,
      0, -1, -2, -2, -1, 0, -3, -1, -2, -2, -3, -1, 0, -3, -6, -2, 1, 0, 1, 1, 0,
      -1, -2, 0, -3, -1, 0, -2, -3, 0, -1, -1, 0, -1, -2, 0, -3, -2, -1, -1, -2,
      -2, -3, -3, -6, -1, 0, -2, 1, -1, 0, -2, -3, -2, -3, -3, -6, -2, -1, -1, -2,
      -1, -2, 0, 1, 0, -1, -1, 0, -1, 0, -2, 1, -1, -2, 0, 1, 0, 1, 1, 0
};

// Number of components in 18-connected neighbourhood
constexpr uint8 toriwaki[ 32768 ] = {
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0xE0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x80,0xC0,0x00,0x00,0xE0,0xF0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x00,0x80,0x00,0xA0,0x00,0xE0,0x00,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x80,0xC0,0xA0,0xF0,0xEF,0xFF,0xFF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x00,0x80,0x80,0x80,0x00,0xE0,0xE0,0xE0,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x80,0xC0,0xC0,0xC0,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0x80,0xA0,0xA0,0xA0,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0xE0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x80,0xC0,0x00,0x00,0xE0,0xF0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x00,0x80,0x00,0xA0,0x00,0xE0,0x00,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x80,0xC0,0xA0,0xF0,0xEF,0xFF,0xFF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x00,0x80,0x80,0x80,0x00,0xE0,0xE0,0xE0,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x80,0xC0,0xC0,0xC0,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0x80,0xA0,0xA0,0xA0,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0xE0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x80,0xC0,0x00,0x00,0xE0,0xF0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x00,0x80,0x00,0xA0,0x00,0xE0,0x00,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x80,0xC0,0xA0,0xF0,0xEF,0xFF,0xFF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x00,0x80,0x80,0x80,0x00,0xE0,0xE0,0xE0,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x80,0xC0,0xC0,0xC0,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0x80,0xA0,0xA0,0xA0,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0xE0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x80,0xC0,0x00,0x00,0xE0,0xF0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x00,0x80,0x00,0xA0,0x00,0xE0,0x00,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x80,0xC0,0xA0,0xF0,0xEF,0xFF,0xFF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x00,0x80,0x80,0x80,0x00,0xE0,0xE0,0xE0,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x80,0xC0,0xC0,0xC0,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0x80,0xA0,0xA0,0xA0,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0xE0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xC0,0x00,0x00,0xE0,0xF0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0xA0,0x00,0xE0,0x00,0xF0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xC0,0xA0,0xF0,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x00,0xE0,0xE0,0xE0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xC0,0xC0,0xC0,0xEF,0xFF,0xFF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xA0,0xA0,0xA0,0xEF,0xFF,0xFF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0xE0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x80,0xC0,0x00,0x00,0xE0,0xF0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x00,0x80,0x00,0xA0,0x00,0xE0,0x00,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x80,0xC0,0xA0,0xF0,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x00,0x80,0x80,0x80,0x00,0xE0,0xE0,0xE0,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x80,0xC0,0xC0,0xC0,0xEF,0xFF,0xFF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0x80,0xA0,0xA0,0xA0,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xE0,0x00,0xE0,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xE0,0x00,0xE0,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0xE0,0xE0,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0xE0,0xE0,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xE0,0x00,0x00,0x00,0xE0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0xE0,0xF0,0x00,0x00,0xE0,0xF0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x00,0xE0,0x00,0xF0,0x00,0xE0,0x00,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xE0,0x00,0xE0,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xE0,0x00,0xE0,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0xE0,0xE0,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0xE0,0xE0,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x00,0xE0,0xE0,0xE0,0x00,0xE0,0xE0,0xE0,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0xE0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x80,0xC0,0x00,0x00,0xE0,0xF0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x00,0x80,0x00,0xA0,0x00,0xE0,0x00,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x80,0xC0,0xA0,0xF0,0xEF,0xFF,0xFF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x00,0x80,0x80,0x80,0x00,0xE0,0xE0,0xE0,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x80,0xC0,0xC0,0xC0,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0x80,0xA0,0xA0,0xA0,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0xE0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x80,0xC0,0x00,0x00,0xE0,0xF0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x00,0x80,0x00,0xA0,0x00,0xE0,0x00,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x80,0xC0,0xA0,0xF0,0xEF,0xFF,0xFF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x00,0x80,0x80,0x80,0x00,0xE0,0xE0,0xE0,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x80,0xC0,0xC0,0xC0,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0x80,0xA0,0xA0,0xA0,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0xE0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x80,0xC0,0x00,0x00,0xE0,0xF0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x00,0x80,0x00,0xA0,0x00,0xE0,0x00,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x80,0xC0,0xA0,0xF0,0xEF,0xFF,0xFF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x00,0x80,0x80,0x80,0x00,0xE0,0xE0,0xE0,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x80,0xC0,0xC0,0xC0,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0x80,0xA0,0xA0,0xA0,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0xE0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x80,0xC0,0x00,0x00,0xE0,0xF0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x00,0x80,0x00,0xA0,0x00,0xE0,0x00,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x80,0xC0,0xA0,0xF0,0xEF,0xFF,0xFF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x00,0x80,0x80,0x80,0x00,0xE0,0xE0,0xE0,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x80,0xC0,0xC0,0xC0,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0x80,0xA0,0xA0,0xA0,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0xE0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x80,0xC0,0x00,0x00,0xE0,0xF0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x00,0x80,0x00,0xA0,0x00,0xE0,0x00,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x80,0xC0,0xA0,0xF0,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x00,0x80,0x80,0x80,0x00,0xE0,0xE0,0xE0,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x80,0xC0,0xC0,0xC0,0xEF,0xFF,0xFF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0x80,0xA0,0xA0,0xA0,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x80,0xC0,0x00,0x00,0xE0,0xF0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x80,0xC0,0x00,0x00,0xE0,0xF0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x80,0xC0,0xA0,0xF0,0xEF,0xFF,0xFF,0xFF,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x80,0xC0,0xA0,0xF0,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x80,0xC0,0xC0,0xC0,0xEF,0xFF,0xFF,0xFF,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x80,0xC0,0xC0,0xC0,0xEF,0xFF,0xFF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0x80,0xA0,0x80,0xA0,0xEF,0xFF,0xEF,0xFF,
      0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0x80,0xA0,0x80,0xA0,0xEF,0xFF,0xEF,0xFF,
      0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0x00,0xC0,0xF0,0x00,0x00,0xC0,0xF0,0x00,0x00,0x80,0xA0,0x00,0x00,0xE0,0xF0,
      0x00,0x00,0xC0,0xF0,0x00,0x00,0xC0,0xF0,0x00,0x00,0xE0,0xF0,0x00,0x00,0xE0,0xF0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0x80,0xA0,0xA0,0xA0,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0x80,0xA0,0x80,0xA0,0xEF,0xFF,0xEF,0xFF,
      0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0x80,0xA0,0x80,0xA0,0xEF,0xFF,0xEF,0xFF,
      0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0x80,0xA0,0xA0,0xA0,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0x80,0xA0,0xA0,0xA0,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,
      0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,
      0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0xE0,0xE0,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0xE0,0xE0,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0x00,0xC0,0xF0,0x00,0x00,0xC0,0xF0,0x00,0x00,0xE0,0xF0,0x00,0x00,0xE0,0xF0,
      0x00,0x00,0xC0,0xF0,0x00,0x00,0xC0,0xF0,0x00,0x00,0xE0,0xF0,0x00,0x00,0xE0,0xF0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,
      0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,
      0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0xE0,0xE0,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0xE0,0xE0,0x00,0x00,0xE0,0xE0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0xE0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x80,0xC0,0x00,0x00,0xE0,0xF0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x00,0x80,0x00,0xA0,0x00,0xE0,0x00,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x80,0xC0,0xA0,0xF0,0xEF,0xFF,0xFF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x00,0x80,0x80,0x80,0x00,0xE0,0xE0,0xE0,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x80,0xC0,0xC0,0xC0,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0x80,0xA0,0xA0,0xA0,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0xE0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x80,0xC0,0x00,0x00,0xE0,0xF0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x00,0x80,0x00,0xA0,0x00,0xE0,0x00,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x80,0xC0,0xA0,0xF0,0xEF,0xFF,0xFF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x00,0x80,0x80,0x80,0x00,0xE0,0xE0,0xE0,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x80,0xC0,0xC0,0xC0,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0x80,0xA0,0xA0,0xA0,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0xE0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x80,0xC0,0x00,0x00,0xE0,0xF0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x00,0x80,0x00,0xA0,0x00,0xE0,0x00,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x80,0xC0,0xA0,0xF0,0xEF,0xFF,0xFF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x00,0x80,0x80,0x80,0x00,0xE0,0xE0,0xE0,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x80,0xC0,0xC0,0xC0,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0x80,0xA0,0xA0,0xA0,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0xE0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x80,0xC0,0x00,0x00,0xE0,0xF0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x00,0x80,0x00,0xA0,0x00,0xE0,0x00,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x80,0xC0,0xA0,0xF0,0xEF,0xFF,0xFF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x00,0x80,0x80,0x80,0x00,0xE0,0xE0,0xE0,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x80,0xC0,0xC0,0xC0,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0x80,0xA0,0xA0,0xA0,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0xE0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x80,0xC0,0x00,0x00,0xE0,0xF0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x00,0x80,0x00,0xA0,0x00,0xE0,0x00,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x80,0xC0,0xA0,0xF0,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x00,0x80,0x80,0x80,0x00,0xE0,0xE0,0xE0,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x80,0xC0,0xC0,0xC0,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0x80,0xA0,0xA0,0xA0,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x80,0x80,0xC0,0xC0,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x80,0x80,0xC0,0xC0,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0xA0,0x00,0xF0,0x00,0xA0,0x00,0xF0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x80,0x00,0xC0,0x00,0xE0,0x00,0xF0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x80,0xC0,0xC0,0xC0,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0xA0,0x00,0xF0,0x00,0xA0,0x00,0xF0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x00,0xE0,0x00,0xF0,0x00,0xE0,0x00,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x80,0x80,0xC0,0xC0,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x80,0x80,0xC0,0xC0,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x80,0xC0,0xC0,0xC0,0xEF,0xFF,0xFF,0xFF,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x80,0xC0,0xC0,0xC0,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x00,0x80,0x00,0xA0,0x00,0xE0,0x00,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x80,0xC0,0xA0,0xF0,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x00,0x80,0x00,0xA0,0x00,0xE0,0x00,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x80,0xC0,0xA0,0xF0,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0x80,0xA0,0xA0,0xA0,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0x80,0xA0,0xA0,0xA0,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xE0,0x00,0xE0,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xE0,0x00,0xE0,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0xA0,0x00,0xF0,0x00,0xA0,0x00,0xF0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x00,0xE0,0x00,0xF0,0x00,0xE0,0x00,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0xA0,0x00,0xF0,0x00,0xA0,0x00,0xF0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x00,0xE0,0x00,0xF0,0x00,0xE0,0x00,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xE0,0x00,0xE0,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xE0,0x00,0xE0,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0xE0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x80,0xC0,0x00,0x00,0xE0,0xF0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x00,0x80,0x00,0xA0,0x00,0xE0,0x00,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x80,0xC0,0xA0,0xF0,0xEF,0xFF,0xFF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x00,0x80,0x80,0x80,0x00,0xE0,0xE0,0xE0,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x80,0xC0,0xC0,0xC0,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0x80,0xA0,0xA0,0xA0,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0xE0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x80,0xC0,0x00,0x00,0xE0,0xF0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x00,0x80,0x00,0xA0,0x00,0xE0,0x00,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x80,0xC0,0xA0,0xF0,0xEF,0xFF,0xFF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x00,0x80,0x80,0x80,0x00,0xE0,0xE0,0xE0,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x80,0xC0,0xC0,0xC0,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0x80,0xA0,0xA0,0xA0,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0xE0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x80,0xC0,0x00,0x00,0xE0,0xF0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x00,0x80,0x00,0xA0,0x00,0xE0,0x00,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x80,0xC0,0xA0,0xF0,0xEF,0xFF,0xFF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x00,0x80,0x80,0x80,0x00,0xE0,0xE0,0xE0,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x80,0xC0,0xC0,0xC0,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0x80,0xA0,0xA0,0xA0,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0xE0,
      0x00,0x00,0x00,0xC0,0x00,0x00,0x00,0xC0,0x00,0x00,0x80,0xC0,0x00,0x00,0xE0,0xF0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0xA0,
      0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0xA0,0xF0,0x00,0x00,0xA0,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x00,0x80,0x00,0xA0,0x00,0xE0,0x00,0xF0,
      0x00,0xC0,0x00,0xF0,0x00,0xC0,0x00,0xF0,0x80,0xC0,0xA0,0xF0,0xEF,0xFF,0xFF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x00,0x80,0x80,0x80,0x00,0xE0,0xE0,0xE0,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x80,0xC0,0xC0,0xC0,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0x80,0xA0,0xA0,0xA0,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x00,0x80,0x80,0x80,0x00,0xE0,0xE0,0xE0,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x80,0xC0,0xC0,0xC0,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0x80,0xA0,0xA0,0xA0,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0x80,0x00,0x80,0x00,0xE0,0x00,0xE0,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x00,0x00,0x80,0x80,0x00,0x00,0xE0,0xE0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x00,0x80,0x80,0x80,0x00,0xE0,0xE0,0xE0,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x80,0xC0,0xC0,0xC0,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0x80,0xA0,0xA0,0xA0,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x80,0x80,0xC0,0xC0,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x80,0x80,0xC0,0xC0,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x80,0xC0,0xC0,0xC0,0xEF,0xFF,0xFF,0xFF,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x80,0xC0,0xC0,0xC0,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x00,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x80,0xC0,0x80,0xC0,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x80,0x80,0xC0,0xC0,0xEF,0xEF,0xFF,0xFF,
      0x00,0x00,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0x80,0x80,0xC0,0xC0,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x80,0xC0,0xC0,0xC0,0xEF,0xFF,0xFF,0xFF,
      0x00,0xC0,0xC0,0xC0,0x00,0xC0,0xC0,0xC0,0x80,0xC0,0xC0,0xC0,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0x80,0xA0,0x80,0xA0,0xEF,0xFF,0xEF,0xFF,
      0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0x80,0xA0,0x80,0xA0,0xEF,0xFF,0xEF,0xFF,
      0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0x80,0xA0,0xA0,0xA0,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0x80,0xA0,0xA0,0xA0,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0x80,0xA0,0x80,0xA0,0xEF,0xFF,0xEF,0xFF,
      0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0x80,0x80,0x80,0x80,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x00,0xA0,0x00,0xA0,0x00,0xA0,0x00,0xA0,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0x80,0xA0,0x80,0xA0,0xEF,0xFF,0xEF,0xFF,
      0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0x80,0xA0,0xA0,0xA0,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0x00,0x00,0xA0,0xA0,0x00,0x00,0xA0,0xA0,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0x80,0x80,0xA0,0xA0,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x00,0xA0,0xA0,0xA0,0x00,0xA0,0xA0,0xA0,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0x80,0xA0,0xA0,0xA0,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,
      0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,
      0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,
      0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,0xAF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,
      0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xCF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0x0F,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,0xAF,0xFF,
      0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,
      0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xCF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,0xEF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,
      0x0F,0x0F,0xFF,0xFF,0x0F,0x0F,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,0xAF,0xAF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,
      0xCF,0xCF,0xFF,0xFF,0xCF,0xCF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,0xEF,0xEF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0x0F,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,
      0xCF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF
};

bool EndOk(
      dip::sint* local,
      int type,
      dip::sint endpixel[ 64 ][ 4 ]
) {
   dip::sint index = 0;
   if( type == 2 ) {
      if( *local++ ) { index++; }
      if( *local++ ) { index++; }
      if( *local++ ) { index++; }
      if( *local++ ) { index++; }
      if( *local++ ) { index++; }
      if( *local++ ) { index++; }
      if( *local++ ) { index++; }
      if( *local++ ) { index++; }
      if( *local++ ) { index++; }
      if( *local++ ) { index++; }
      if( *local++ ) { index++; }
      if( *local++ ) { index++; }
      if( *local++ ) { index++; }
      local++; // central pixel
      if( *local++ ) { index++; }
      if( *local++ ) { index++; }
      if( *local++ ) { index++; }
      if( *local++ ) { index++; }
      if( *local++ ) { index++; }
      if( *local++ ) { index++; }
      if( *local++ ) { index++; }
      if( *local++ ) { index++; }
      if( *local++ ) { index++; }
      if( *local++ ) { index++; }
      if( *local++ ) { index++; }
      if( *local++ ) { index++; }
      if( *local ) { index++; }
      return index < 12;
   } else {
      if( local[ 10 ] ) { index |= 32; }
      if( local[ 16 ] ) { index |= 16; }
      if( local[ 14 ] ) { index |= 8; }
      if( local[ 12 ] ) { index |= 4; }
      if( local[ 4 ] ) { index |= 2; }
      if( local[ 22 ] ) { index |= 1; }
      dip::sint* table = &endpixel[ index ][ 0 ];
      if( *table == ENDPIXEL ) {
         return true;
      }
      if( *table == NOENDPIXEL ) {
         return false;
      }
      if( !local[ *table++ ] || !local[ *table++ ] || !local[ *table++ ] ) {
         return true;
      }
      if( *table != NOENTRY && !local[ *table ] ) {
         return true;
      }
      return false;
   }
}

int ToriwakiOk( dip::sint* local ) {
   dip::sint index = 0;
   if( local[ 1 ] ) { index |= 16384; }
   if( local[ 3 ] ) { index |= 8192; }
   if( local[ 4 ] ) { index |= 4096; }
   if( local[ 5 ] ) { index |= 2048; }
   if( local[ 7 ] ) { index |= 1024; }
   if( local[ 9 ] ) { index |= 512; }
   if( local[ 10 ] ) { index |= 256; }
   if( local[ 11 ] ) { index |= 128; }
   if( local[ 12 ] ) { index |= 64; }
   if( local[ 14 ] ) { index |= 32; }
   if( local[ 15 ] ) { index |= 16; }
   if( local[ 16 ] ) { index |= 8; }
   if( local[ 17 ] ) { index |= 4; }
   if( local[ 19 ] ) { index |= 2; }
   if( local[ 21 ] ) { index |= 1; }
   int tori = toriwaki[ index ];
   index = 0;
   if( local[ 22 ] ) { index |= 4; }
   if( local[ 23 ] ) { index |= 2; }
   if( local[ 25 ] ) { index |= 1; }
   return ( tori >> index ) & 1;
}


bool EulerOk( dip::sint* local ) {
   dip::sint index = 0;
   if( local[ 0 ] ) { index |= 128; }
   if( local[ 3 ] ) { index |= 64; }
   if( local[ 1 ] ) { index |= 32; }
   if( local[ 4 ] ) { index |= 16; }
   if( local[ 9 ] ) { index |= 8; }
   if( local[ 12 ] ) { index |= 4; }
   if( local[ 10 ] ) { index |= 2; }
   int newnumb = euler[ index ];
   ++index;
   int oldnumb = euler[ index ];

   index = 0;
   if( local[ 6 ] ) { index |= 128; }
   if( local[ 3 ] ) { index |= 64; }
   if( local[ 7 ] ) { index |= 32; }
   if( local[ 4 ] ) { index |= 16; }
   if( local[ 15 ] ) { index |= 8; }
   if( local[ 12 ] ) { index |= 4; }
   if( local[ 16 ] ) { index |= 2; }
   newnumb += euler[ index ];
   ++index;
   oldnumb += euler[ index ];

   index = 0;
   if( local[ 2 ] ) { index |= 128; }
   if( local[ 5 ] ) { index |= 64; }
   if( local[ 1 ] ) { index |= 32; }
   if( local[ 4 ] ) { index |= 16; }
   if( local[ 11 ] ) { index |= 8; }
   if( local[ 14 ] ) { index |= 4; }
   if( local[ 10 ] ) { index |= 2; }
   newnumb += euler[ index ];
   ++index;
   oldnumb += euler[ index ];

   index = 0;
   if( local[ 8 ] ) { index |= 128; }
   if( local[ 5 ] ) { index |= 64; }
   if( local[ 7 ] ) { index |= 32; }
   if( local[ 4 ] ) { index |= 16; }
   if( local[ 17 ] ) { index |= 8; }
   if( local[ 14 ] ) { index |= 4; }
   if( local[ 16 ] ) { index |= 2; }
   newnumb += euler[ index ];
   ++index;
   oldnumb += euler[ index ];

   index = 0;
   if( local[ 18 ] ) { index |= 128; }
   if( local[ 21 ] ) { index |= 64; }
   if( local[ 19 ] ) { index |= 32; }
   if( local[ 22 ] ) { index |= 16; }
   if( local[ 9 ] ) { index |= 8; }
   if( local[ 12 ] ) { index |= 4; }
   if( local[ 10 ] ) { index |= 2; }
   newnumb += euler[ index ];
   ++index;
   oldnumb += euler[ index ];

   index = 0;
   if( local[ 24 ] ) { index |= 128; }
   if( local[ 21 ] ) { index |= 64; }
   if( local[ 25 ] ) { index |= 32; }
   if( local[ 22 ] ) { index |= 16; }
   if( local[ 15 ] ) { index |= 8; }
   if( local[ 12 ] ) { index |= 4; }
   if( local[ 16 ] ) { index |= 2; }
   newnumb += euler[ index ];
   ++index;
   oldnumb += euler[ index ];

   index = 0;
   if( local[ 20 ] ) { index |= 128; }
   if( local[ 23 ] ) { index |= 64; }
   if( local[ 19 ] ) { index |= 32; }
   if( local[ 22 ] ) { index |= 16; }
   if( local[ 11 ] ) { index |= 8; }
   if( local[ 14 ] ) { index |= 4; }
   if( local[ 10 ] ) { index |= 2; }
   newnumb += euler[ index ];
   ++index;
   oldnumb += euler[ index ];

   index = 0;
   if( local[ 26 ] ) { index |= 128; }
   if( local[ 23 ] ) { index |= 64; }
   if( local[ 25 ] ) { index |= 32; }
   if( local[ 22 ] ) { index |= 16; }
   if( local[ 17 ] ) { index |= 8; }
   if( local[ 14 ] ) { index |= 4; }
   if( local[ 16 ] ) { index |= 2; }
   newnumb += euler[ index ];
   ++index;
   oldnumb += euler[ index ];

   return oldnumb == newnumb;
}

void Eusk3D(
      uint8* pimb1,
      uint8 mi,
      uint8 mo,
      uint8 mp,
      int end, bool edge,
      dip::sint d1, dip::sint d2, dip::sint d3, dip::sint d5, dip::sint d6, dip::sint d9, dip::sint distmax,
      dip::sint sizex,
      dip::sint sizey,
      dip::sint sizez,
      dip::sint strideX,
      dip::sint strideY,
      dip::sint strideZ
) {
   dip::sint oldlocal[ 27 ]; // old local neighbourhood
   dip::sint newlocal[ 27 ]; // new local neighbourhood

   dip::sint sX2 = 2 * strideX;
   dip::sint sY2 = 2 * strideY;
   dip::sint sZ2 = 2 * strideZ;

   // preliminaries: edge treatment and bit plane copies
   EuskFixEdge( pimb1, mi, edge, sizex, sizey, sizez, strideX, strideY, strideZ );
   EuskPlaneCopy( pimb1, mi, uint8( mo | mp ), sizex, sizey, sizez, strideX, strideY, strideZ );
   EuskFixEdge( pimb1, mp, false, sizex, sizey, sizez, strideX, strideY, strideZ );

   // fill the tables
   dip::sint bvcontour[ 3 ][ 3 ], endpixel[ 64 ][ 4 ];
   dip::sint a1[ 98 ][ 2 ], a2[ 98 ][ 2 ], a3[ 98 ][ 2 ], a5[ 98 ][ 2 ], a6[ 98 ][ 2 ], a9[ 98 ][ 2 ];
   dip::uint8 n1[ 98 ][ 2 ], n2[ 98 ][ 2 ], n3[ 98 ][ 2 ], n5[ 98 ][ 2 ], n6[ 98 ][ 2 ], n9[ 98 ][ 2 ];
   Eusk3DFillTables(
         strideX, strideY, strideZ, bvcontour, endpixel,
         a1, a2, a3, a5, a6, a9, n1, n2, n3, n5, n6, n9 );

   // calculate required number of buckets
   dip::uint nbuckets = 2;  // number of buckets
   for( ; nbuckets <= static_cast< dip::uint >( d9 ); nbuckets *= 2 ) {}

   // create bucket structure buckets
   Bucket b( nbuckets, QUEUE_SIZE_3D );

   // fill bucket 0
   EuskFillBucketZero( b, pimb1, mi, edge, sizex, sizey, sizez, strideX, strideY, strideZ );

   // generate distances
   for( dip::sint dist = d1; !b.Empty() && ( dist <= distmax || distmax == 0 ); ++dist ) {
      // Store pixels which are subject to removal this iteration in bucket "dist".
      // Remove mask mp immediately to prevent double storage.

      //  shuffle
      uint8 m2 = mp;

      b.startwrite( dist );
      b.startread( dist - d1 );
      uint8* pim;    // image pointer
      uint8* pn;     // image pointer
      uint8 dirc;    // direction of central pixel
      if( dist == d1 ) {
         while( b.go ) {
            b.RCLP( pim );
            pn = pim + strideX;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 69 );
            }
            pn = pim + strideY;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 52 );
            }
            pn = pim + strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 49 );
            }
            pn = pim - strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 48 );
            }
            pn = pim - strideY;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 45 );
            }
            pn = pim - strideX;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 28 );
            }
         }
      } else if( dist > d1 ) {
         while( b.go ) {
            b.RCL( pim, dirc );
            dip::sint index = a1[ dirc ][ 0 ];
            if( index ) {
               pn = pim + index;
               if( *pn & m2 ) {
                  *pn &= ~m2;
                  b.STR( pn, n1[ dirc ][ 0 ] );
               }
               index = a1[ dirc ][ 1 ];
               if( index ) {
                  pn = pim + index;
                  if( *pn & m2 ) {
                     *pn &= ~m2;
                     b.STR( pn, n1[ dirc ][ 1 ] );
                  }
               }
            }
         }
      }

      b.startread( dist - d2 );
      if( dist == d2 ) {
         while( b.go ) {
            b.RCLP( pim );
            pn = pim + strideX + strideY;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 74 );
            }
            pn = pim + strideX + strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 70 );
            }
            pn = pim + strideX - strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 68 );
            }
            pn = pim + strideX - strideY;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 64 );
            }
            pn = pim + strideY + strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 53 );
            }
            pn = pim + strideY - strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 51 );
            }
            pn = pim - strideY + strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 46 );
            }
            pn = pim - strideY - strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 44 );
            }
            pn = pim - strideX + strideY;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 33 );
            }
            pn = pim - strideX + strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 29 );
            }
            pn = pim - strideX - strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 27 );
            }
            pn = pim - strideX - strideY;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 23 );
            }
         }
      } else if( dist > d2 ) {
         while( b.go ) {
            b.RCL( pim, dirc );
            dip::sint index = a2[ dirc ][ 0 ];
            if( index ) {
               pn = pim + index;
               if( *pn & m2 ) {
                  *pn &= ~m2;
                  b.STR( pn, n2[ dirc ][ 0 ] );
               }
               index = a2[ dirc ][ 1 ];
               if( index ) {
                  pn = pim + index;
                  if( *pn & m2 ) {
                     *pn &= ~m2;
                     b.STR( pn, n2[ dirc ][ 1 ] );
                  }
               }
            }
         }
      }

      b.startread( dist - d3 );
      if( dist == d3 ) {
         while( b.go ) {
            b.RCLP( pim );
            pn = pim + strideX + strideY + strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 75 );
            }
            pn = pim + strideX + strideY - strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 73 );
            }
            pn = pim + strideX - strideY + strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 65 );
            }
            pn = pim + strideX - strideY - strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 63 );
            }
            pn = pim - strideX + strideY + strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 34 );
            }
            pn = pim - strideX + strideY - strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 32 );
            }
            pn = pim - strideX - strideY + strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 24 );
            }
            pn = pim - strideX - strideY - strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 22 );
            }
         }
      } else if( dist > d3 ) {
         while( b.go ) {
            b.RCL( pim, dirc );
            dip::sint index = a3[ dirc ][ 0 ];
            if( index ) {
               pn = pim + index;
               if( *pn & m2 ) {
                  *pn &= ~m2;
                  b.STR( pn, n3[ dirc ][ 0 ] );
               }
               index = a3[ dirc ][ 1 ];
               if( index ) {
                  pn = pim + index;
                  if( *pn & m2 ) {
                     *pn &= ~m2;
                     b.STR( pn, n3[ dirc ][ 1 ] );
                  }
               }
            }
         }
      }

      b.startread( dist - d5 );
      if( dist == d5 ) {
         while( b.go ) {
            b.RCLP( pim );
            pn = pim + sX2 + strideY;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 93 );
            }
            pn = pim + sX2 + strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 90 );
            }
            pn = pim + sX2 - strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 89 );
            }
            pn = pim + sX2 - strideY;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 86 );
            }
            pn = pim + strideX + sY2;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 79 );
            }
            pn = pim + strideX + sZ2;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 71 );
            }
            pn = pim + strideX - sZ2;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 67 );
            }
            pn = pim + strideX - sY2;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 59 );
            }
            pn = pim + sY2 + strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 56 );
            }
            pn = pim + sY2 - strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 55 );
            }
            pn = pim + strideY + sZ2;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 54 );
            }
            pn = pim + strideY - sZ2;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 50 );
            }
            pn = pim - strideY + sZ2;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 47 );
            }
            pn = pim - strideY - sZ2;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 43 );
            }
            pn = pim - sY2 + strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 42 );
            }
            pn = pim - sY2 - strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 41 );
            }
            pn = pim - strideX + sY2;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 38 );
            }
            pn = pim - strideX + sZ2;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 30 );
            }
            pn = pim - strideX - sZ2;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 26 );
            }
            pn = pim - strideX - sY2;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 18 );
            }
            pn = pim - sX2 + strideY;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 11 );
            }
            pn = pim - sX2 + strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 8 );
            }
            pn = pim - sX2 - strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 7 );
            }
            pn = pim - sX2 - strideY;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 4 );
            }
         }
      } else if( dist > d5 ) {
         while( b.go ) {
            b.RCL( pim, dirc );
            dip::sint index = a5[ dirc ][ 0 ];
            if( index ) {
               pn = pim + index;
               if( *pn & m2 ) {
                  *pn &= ~m2;
                  b.STR( pn, n5[ dirc ][ 0 ] );
               }
               index = a5[ dirc ][ 1 ];
               if( index ) {
                  pn = pim + index;
                  if( *pn & m2 ) {
                     *pn &= ~m2;
                     b.STR( pn, n5[ dirc ][ 1 ] );
                  }
               }
            }
         }
      }

      b.startread( dist - d6 );
      if( dist == d6 ) {
         while( b.go ) {
            b.RCLP( pim );
            pn = pim + sX2 + strideY + strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 94 );
            }
            pn = pim + sX2 + strideY - strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 92 );
            }
            pn = pim + sX2 - strideY + strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 87 );
            }
            pn = pim + sX2 - strideY - strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 85 );
            }
            pn = pim + strideX + sY2 + strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 80 );
            }
            pn = pim + strideX + sY2 - strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 78 );
            }
            pn = pim + strideX + strideY + sZ2;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 76 );
            }
            pn = pim + strideX + strideY - sZ2;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 72 );
            }
            pn = pim + strideX - strideY + sZ2;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 66 );
            }
            pn = pim + strideX - strideY - sZ2;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 62 );
            }
            pn = pim + strideX - sY2 + strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 60 );
            }
            pn = pim + strideX - sY2 - strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 58 );
            }
            pn = pim - strideX + sY2 + strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 39 );
            }
            pn = pim - strideX + sY2 - strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 37 );
            }
            pn = pim - strideX + strideY + sZ2;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 35 );
            }
            pn = pim - strideX + strideY - sZ2;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 31 );
            }
            pn = pim - strideX - strideY + sZ2;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 25 );
            }
            pn = pim - strideX - strideY - sZ2;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 21 );
            }
            pn = pim - strideX - sY2 + strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 19 );
            }
            pn = pim - strideX - sY2 - strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 17 );
            }
            pn = pim - sX2 + strideY + strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 12 );
            }
            pn = pim - sX2 + strideY - strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 10 );
            }
            pn = pim - sX2 - strideY + strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 5 );
            }
            pn = pim - sX2 - strideY - strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 3 );
            }
         }
      } else if( dist > d6 ) {
         while( b.go ) {
            b.RCL( pim, dirc );
            dip::sint index = a6[ dirc ][ 0 ];
            if( index ) {
               pn = pim + index;
               if( *pn & m2 ) {
                  *pn &= ~m2;
                  b.STR( pn, n6[ dirc ][ 0 ] );
               }
               index = a6[ dirc ][ 1 ];
               if( index ) {
                  pn = pim + index;
                  if( *pn & m2 ) {
                     *pn &= ~m2;
                     b.STR( pn, n6[ dirc ][ 1 ] );
                  }
               }
            }
         }
      }

      b.startread( dist - d9 );
      if( dist == d9 ) {
         while( b.go ) {
            b.RCLP( pim );
            pn = pim + sX2 + sY2 + strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 97 );
            }
            pn = pim + sX2 + sY2 - strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 96 );
            }
            pn = pim + sX2 + strideY + sZ2;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 95 );
            }
            pn = pim + sX2 + strideY - sZ2;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 91 );
            }
            pn = pim + sX2 - strideY + sZ2;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 88 );
            }
            pn = pim + sX2 - strideY - sZ2;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 84 );
            }
            pn = pim + sX2 - sY2 + strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 83 );
            }
            pn = pim + sX2 - sY2 - strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 82 );
            }
            pn = pim + strideX + sY2 + sZ2;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 81 );
            }
            pn = pim + strideX + sY2 - sZ2;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 77 );
            }
            pn = pim + strideX - sY2 + sZ2;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 61 );
            }
            pn = pim + strideX - sY2 - sZ2;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 57 );
            }
            pn = pim - strideX + sY2 + sZ2;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 40 );
            }
            pn = pim - strideX + sY2 - sZ2;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 36 );
            }
            pn = pim - strideX - sY2 + sZ2;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 20 );
            }
            pn = pim - strideX - sY2 - sZ2;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 16 );
            }
            pn = pim - sX2 + sY2 + strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 15 );
            }
            pn = pim - sX2 + sY2 - strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 14 );
            }
            pn = pim - sX2 + strideY + sZ2;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 13 );
            }
            pn = pim - sX2 + strideY - sZ2;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 9 );
            }
            pn = pim - sX2 - strideY + sZ2;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 6 );
            }
            pn = pim - sX2 - strideY - sZ2;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 2 );
            }
            pn = pim - sX2 - sY2 + strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 1 );
            }
            pn = pim - sX2 - sY2 - strideZ;
            if( *pn & m2 ) {
               *pn &= ~m2;
               b.STR( pn, 0 );
            }
         }
      } else if( dist > d9 ) {
         while( b.go ) {
            b.RCL( pim, dirc );
            dip::sint index = a9[ dirc ][ 0 ];
            if( index ) {
               pn = pim + index;
               if( *pn & m2 ) {
                  *pn &= ~m2;
                  b.STR( pn, n9[ dirc ][ 0 ] );
               }
               index = a9[ dirc ][ 1 ];
               if( index ) {
                  pn = pim + index;
                  if( *pn & m2 ) {
                     *pn &= ~m2;
                     b.STR( pn, n9[ dirc ][ 1 ] );
                  }
               }
            }
         }
      }

      // all pixels with distance 'dist' are now found
      b.closewrite();
      b.Free( dist - d9 );

      for( dip::uint ii = 0; ii < 3; ++ii ) {
         b.startread( dist );
         while( b.go ) {
            b.RCL( pim, dirc );

            // can be obtained from direction as well?
            if(( *( pim + bvcontour[ ii ][ 0 ] ) & mo ) &&
               ( *( pim + bvcontour[ ii ][ 1 ] ) & mo ) &&
               ( *( pim + bvcontour[ ii ][ 2 ] ) & mo )) {
                  continue;
            }

            // put neighbourhood in local tables
            PutInLocal( pim, strideX, strideY, strideZ, mo, uint8( mi | mo ), oldlocal, newlocal );

            // test in the old image on edge and end voxels
            if( end && EndOk( oldlocal, end, endpixel )) { continue; }

            // euler number must not change upon removal of central pixel
            if( !EulerOk( oldlocal )) { continue; }

            // number of objects must not change upon removal of pixel
            if( !ToriwakiOk( oldlocal )) { continue; }

            // now the same in recursive image, first euler
            if( !EulerOk( newlocal )) { continue; }

            // and toriwaki
            if( !ToriwakiOk( newlocal )) { continue; }

            // REMOVE
            *pim &= ~mi;
         }

         // update image, if pixel may be removed: remove mo, restore mi
         b.startread( dist );
         while( b.go ) {
            b.RCLP( pim );
            if( !( *pim & mi )) {
               *pim |= mi;
               *pim &= ~mo;
            }
         }
      }
   } // end of dist loop

   // Fix image
   EuskSetFromPlane( pimb1, mo, sizex, sizey, sizez, strideX, strideY, strideZ );
}

} // namespace

void EuclideanSkeleton(
      Image const& in,
      Image& out,
      String const& s_endPixelCondition,
      String const& s_edgeCondition
) {
   DIP_THROW_IF( !in.IsForged(), E::IMAGE_NOT_FORGED );
   DIP_THROW_IF( !in.DataType().IsBinary(), E::IMAGE_NOT_BINARY );
   DIP_THROW_IF( !in.IsScalar(), E::IMAGE_NOT_SCALAR );
   dip::uint ndims = in.Dimensionality();
   DIP_THROW_IF(( ndims != 2 ) && ( ndims != 3), E::DIMENSIONALITY_NOT_SUPPORTED );

   // End pixel condition
   int endPixelCondition;
   if( s_endPixelCondition == S::LOOSE_ENDS_AWAY ) {
      endPixelCondition = -1;
   } else if( s_endPixelCondition == S::NATURAL ) {
      endPixelCondition = 0;
   } else if( s_endPixelCondition == S::ONE_NEIGHBOR ) {
      endPixelCondition = 1;
   } else if( s_endPixelCondition == S::TWO_NEIGHBORS ) {
      endPixelCondition = 2;
   } else if( s_endPixelCondition == S::THREE_NEIGHBORS ) {
      endPixelCondition = 3;
   } else {
      DIP_THROW_INVALID_FLAG( s_endPixelCondition );
   }

   // Edge condition
   bool edgeCondition;
   DIP_STACK_TRACE_THIS( edgeCondition = BooleanFromString( s_edgeCondition, S::OBJECT, S::BACKGROUND ));

   // Copy input plane to output plane. Operation takes place directly in the output plane.
   Image c_in = in; // temporary copy of image header, so we can strip out
   out.ReForge( in.Sizes(), 1, DT_BIN ); // reforging first in case `out` is the right size but a different data type
   out.Copy( c_in );

   // Make a call to the real workhorse: Ben Verwer's eusk
   if( out.Dimensionality() == 2 ) {
      Eusk2D(
            static_cast< uint8* >( out.Origin() ),
            uint8( 1 << 0 ),
            uint8( 1 << 1 ),
            uint8( 1 << 2 ),
            endPixelCondition, edgeCondition,
            5, 7, 11, 0,
            static_cast< dip::sint >( out.Size( 0 )),
            static_cast< dip::sint >( out.Size( 1 )),
            out.Stride( 0 ),
            out.Stride( 1 ));
   } else {
      Eusk3D(
            static_cast< uint8* >( out.Origin() ),
            uint8( 1 << 0 ),
            uint8( 1 << 1 ),
            uint8( 1 << 2 ),
            endPixelCondition, edgeCondition,
            4, 6, 7, 9, 10, 12, 0,
            static_cast< dip::sint >( out.Size( 0 )),
            static_cast< dip::sint >( out.Size( 1 )),
            static_cast< dip::sint >( out.Size( 2 )),
            out.Stride( 0 ),
            out.Stride( 1 ),
            out.Stride( 2 ));
   }
}

} // namespace dip

#if defined(__GNUG__)
#pragma GCC diagnostic pop
#endif
